Date: 2022-05-14

> Task :GRASP:compileJava
> Task :GRASP:processResources NO-SOURCE
> Task :GRASP:classes
> Task :GRASP:jar
> Task :KQBF_GRASP:compileJava UP-TO-DATE
> Task :KQBF_GRASP:processResources NO-SOURCE
> Task :KQBF_GRASP:classes UP-TO-DATE

> Task :KQBF_GRASP:run

=============================
instance: ../instances/kqbf/kqbf020
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -102, size: 8, elements:[2, 4, 14, 16, 12, 11, 3, 9]}
> Iteration 9
	BestSolution: {cost: -120, size: 8, elements:[2, 4, 14, 16, 11, 15, 3, 6]}
-----------------
instance: ../instances/kqbf/kqbf020
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 120, size: 8, elements:[2, 4, 14, 16, 11, 15, 3, 6]}
Knapsack Weight of Best Solution: 56
RunningTime: 0.143 seconds


=============================
instance: ../instances/kqbf/kqbf020
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -83, size: 8, elements:[12, 5, 14, 4, 2, 11, 6, 3]}
> Iteration 1
	BestSolution: {cost: -92, size: 7, elements:[17, 4, 14, 5, 9, 8, 1]}
> Iteration 4
	BestSolution: {cost: -120, size: 8, elements:[2, 4, 14, 11, 15, 16, 3, 6]}
-----------------
instance: ../instances/kqbf/kqbf020
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 120, size: 8, elements:[2, 4, 14, 11, 15, 16, 3, 6]}
Knapsack Weight of Best Solution: 56
RunningTime: 0.075 seconds


=============================
instance: ../instances/kqbf/kqbf020
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -2, size: 3, elements:[17, 19, 2]}
> Iteration 1
	BestSolution: {cost: -13, size: 3, elements:[0, 5, 1]}
> Iteration 2
	BestSolution: {cost: -32, size: 5, elements:[17, 4, 2, 15, 5]}
> Iteration 6
	BestSolution: {cost: -34, size: 3, elements:[4, 16, 2]}
> Iteration 9
	BestSolution: {cost: -41, size: 7, elements:[15, 4, 17, 16, 7, 8, 2]}
> Iteration 65
	BestSolution: {cost: -47, size: 6, elements:[14, 4, 9, 7, 8, 0]}
> Iteration 110
	BestSolution: {cost: -65, size: 8, elements:[0, 2, 4, 9, 12, 14, 17, 8]}
> Iteration 766
	BestSolution: {cost: -93, size: 7, elements:[4, 1, 0, 8, 14, 9, 17]}
-----------------
instance: ../instances/kqbf/kqbf020
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 93, size: 7, elements:[4, 1, 0, 8, 14, 9, 17]}
Knapsack Weight of Best Solution: 58
RunningTime: 0.02 seconds


=============================
instance: ../instances/kqbf/kqbf020
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -104, size: 8, elements:[4, 2, 14, 12, 16, 3, 11, 6]}
> Iteration 4
	BestSolution: {cost: -120, size: 7, elements:[3, 14, 4, 2, 16, 11, 15]}
-----------------
instance: ../instances/kqbf/kqbf020
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 120, size: 7, elements:[3, 14, 4, 2, 16, 11, 15]}
Knapsack Weight of Best Solution: 54
RunningTime: 0.134 seconds


=============================
instance: ../instances/kqbf/kqbf020
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
-----------------
instance: ../instances/kqbf/kqbf020
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 0, size: 0, elements:[]}
Knapsack Weight of Best Solution: 0
RunningTime: 0.014 seconds


=============================
instance: ../instances/kqbf/kqbf020
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -104, size: 8, elements:[4, 2, 14, 12, 16, 3, 11, 6]}
-----------------
instance: ../instances/kqbf/kqbf020
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 104, size: 8, elements:[4, 2, 14, 12, 16, 3, 11, 6]}
Knapsack Weight of Best Solution: 56
RunningTime: 0.125 seconds


=============================
instance: ../instances/kqbf/kqbf020
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -77, size: 7, elements:[4, 9, 1, 14, 2, 12, 11]}
> Iteration 17
	BestSolution: {cost: -93, size: 7, elements:[0, 1, 9, 14, 8, 4, 17]}
> Iteration 52
	BestSolution: {cost: -120, size: 8, elements:[2, 4, 15, 14, 16, 11, 3, 6]}
-----------------
instance: ../instances/kqbf/kqbf020
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 120, size: 8, elements:[2, 4, 15, 14, 16, 11, 3, 6]}
Knapsack Weight of Best Solution: 56
RunningTime: 0.04 seconds


=============================
instance: ../instances/kqbf/kqbf020
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -83, size: 8, elements:[14, 2, 4, 12, 5, 11, 6, 3]}
> Iteration 3
	BestSolution: {cost: -93, size: 7, elements:[17, 4, 8, 9, 1, 14, 0]}
> Iteration 11
	BestSolution: {cost: -120, size: 7, elements:[4, 14, 2, 16, 3, 11, 15]}
-----------------
instance: ../instances/kqbf/kqbf020
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 120, size: 7, elements:[4, 14, 2, 16, 3, 11, 15]}
Knapsack Weight of Best Solution: 54
RunningTime: 0.104 seconds


=============================
instance: ../instances/kqbf/kqbf020
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -21, size: 4, elements:[4, 9, 19, 0]}
> Iteration 2
	BestSolution: {cost: -51, size: 6, elements:[5, 14, 4, 2, 8, 1]}
> Iteration 275
	BestSolution: {cost: -53, size: 6, elements:[14, 4, 17, 9, 6, 1]}
> Iteration 381
	BestSolution: {cost: -54, size: 7, elements:[14, 17, 3, 2, 11, 12, 4]}
> Iteration 602
	BestSolution: {cost: -63, size: 6, elements:[4, 12, 13, 14, 8, 2]}
-----------------
instance: ../instances/kqbf/kqbf020
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 63, size: 6, elements:[4, 12, 13, 14, 8, 2]}
Knapsack Weight of Best Solution: 62
RunningTime: 0.018 seconds


=============================
instance: ../instances/kqbf/kqbf020
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -102, size: 8, elements:[13, 12, 2, 14, 4, 11, 6, 3]}
> Iteration 2
	BestSolution: {cost: -120, size: 7, elements:[11, 4, 2, 14, 16, 15, 3]}
-----------------
instance: ../instances/kqbf/kqbf020
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 120, size: 7, elements:[11, 4, 2, 14, 16, 15, 3]}
Knapsack Weight of Best Solution: 54
RunningTime: 0.128 seconds


=============================
instance: ../instances/kqbf/kqbf020
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
-----------------
instance: ../instances/kqbf/kqbf020
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 0, size: 0, elements:[]}
Knapsack Weight of Best Solution: 0
RunningTime: 0.011 seconds


=============================
instance: ../instances/kqbf/kqbf020
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -104, size: 8, elements:[4, 2, 14, 12, 16, 3, 11, 6]}
-----------------
instance: ../instances/kqbf/kqbf020
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 104, size: 8, elements:[4, 2, 14, 12, 16, 3, 11, 6]}
Knapsack Weight of Best Solution: 56
RunningTime: 0.117 seconds


=============================
instance: ../instances/kqbf/kqbf040
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -199, size: 13, elements:[24, 1, 37, 19, 34, 28, 16, 25, 7, 2, 21, 18, 11]}
> Iteration 2
	BestSolution: {cost: -253, size: 18, elements:[8, 14, 17, 1, 25, 19, 21, 0, 3, 2, 32, 11, 18, 4, 36, 9, 26, 24]}
> Iteration 3
	BestSolution: {cost: -300, size: 16, elements:[32, 22, 24, 34, 33, 15, 7, 9, 36, 31, 0, 11, 4, 23, 3, 17]}
> Iteration 637
	BestSolution: {cost: -306, size: 15, elements:[24, 34, 19, 21, 32, 15, 7, 9, 4, 33, 31, 11, 12, 36, 0]}
-----------------
instance: ../instances/kqbf/kqbf040
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 306, size: 15, elements:[24, 34, 19, 21, 32, 15, 7, 9, 4, 33, 31, 11, 12, 36, 0]}
Knapsack Weight of Best Solution: 136
RunningTime: 0.399 seconds


=============================
instance: ../instances/kqbf/kqbf040
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -266, size: 18, elements:[14, 8, 20, 32, 21, 4, 29, 11, 6, 18, 24, 36, 27, 12, 3, 9, 17, 15]}
> Iteration 1
	BestSolution: {cost: -295, size: 16, elements:[32, 34, 9, 15, 22, 21, 4, 33, 11, 36, 29, 24, 31, 7, 3, 6]}
-----------------
instance: ../instances/kqbf/kqbf040
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 295, size: 16, elements:[32, 34, 9, 15, 22, 21, 4, 33, 11, 36, 29, 24, 31, 7, 3, 6]}
Knapsack Weight of Best Solution: 137
RunningTime: 1.683 seconds


=============================
instance: ../instances/kqbf/kqbf040
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -5, size: 3, elements:[20, 6, 1]}
> Iteration 3
	BestSolution: {cost: -12, size: 2, elements:[16, 0]}
> Iteration 6
	BestSolution: {cost: -27, size: 4, elements:[4, 22, 21, 0]}
> Iteration 8
	BestSolution: {cost: -31, size: 4, elements:[25, 2, 22, 0]}
> Iteration 36
	BestSolution: {cost: -32, size: 5, elements:[13, 4, 22, 20, 0]}
> Iteration 52
	BestSolution: {cost: -37, size: 5, elements:[20, 37, 27, 33, 4]}
> Iteration 69
	BestSolution: {cost: -40, size: 8, elements:[8, 25, 20, 3, 13, 37, 12, 1]}
> Iteration 133
	BestSolution: {cost: -49, size: 6, elements:[10, 34, 24, 19, 0, 1]}
> Iteration 144
	BestSolution: {cost: -50, size: 8, elements:[22, 34, 35, 24, 19, 17, 11, 0]}
> Iteration 381
	BestSolution: {cost: -57, size: 5, elements:[24, 8, 7, 23, 1]}
> Iteration 705
	BestSolution: {cost: -58, size: 6, elements:[24, 8, 7, 15, 28, 1]}
> Iteration 770
	BestSolution: {cost: -101, size: 10, elements:[29, 4, 36, 34, 37, 10, 24, 7, 8, 1]}
-----------------
instance: ../instances/kqbf/kqbf040
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 101, size: 10, elements:[29, 4, 36, 34, 37, 10, 24, 7, 8, 1]}
Knapsack Weight of Best Solution: 106
RunningTime: 0.068 seconds


=============================
instance: ../instances/kqbf/kqbf040
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -220, size: 13, elements:[28, 37, 1, 19, 24, 25, 7, 34, 21, 2, 29, 4, 11]}
> Iteration 1
	BestSolution: {cost: -224, size: 16, elements:[8, 14, 1, 25, 24, 18, 6, 22, 36, 31, 3, 2, 7, 32, 11, 9]}
-----------------
instance: ../instances/kqbf/kqbf040
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 224, size: 16, elements:[8, 14, 1, 25, 24, 18, 6, 22, 36, 31, 3, 2, 7, 32, 11, 9]}
Knapsack Weight of Best Solution: 137
RunningTime: 1.646 seconds


=============================
instance: ../instances/kqbf/kqbf040
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 2
	BestSolution: {cost: -6, size: 2, elements:[3, 1]}
-----------------
instance: ../instances/kqbf/kqbf040
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 6, size: 2, elements:[3, 1]}
Knapsack Weight of Best Solution: 18
RunningTime: 0.042 seconds


=============================
instance: ../instances/kqbf/kqbf040
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -224, size: 16, elements:[8, 14, 1, 25, 24, 18, 6, 22, 36, 31, 3, 2, 7, 32, 11, 9]}
-----------------
instance: ../instances/kqbf/kqbf040
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 224, size: 16, elements:[8, 14, 1, 25, 24, 18, 6, 22, 36, 31, 3, 2, 7, 32, 11, 9]}
Knapsack Weight of Best Solution: 137
RunningTime: 1.698 seconds


=============================
instance: ../instances/kqbf/kqbf040
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -2, size: 3, elements:[35, 4, 2]}
> Iteration 1
	BestSolution: {cost: -107, size: 11, elements:[24, 20, 22, 8, 6, 31, 7, 36, 32, 19, 0]}
> Iteration 10
	BestSolution: {cost: -201, size: 14, elements:[4, 24, 36, 0, 9, 11, 2, 29, 14, 31, 1, 21, 37, 3]}
> Iteration 28
	BestSolution: {cost: -234, size: 18, elements:[0, 24, 22, 8, 34, 7, 19, 36, 32, 23, 18, 11, 14, 9, 21, 17, 2, 3]}
> Iteration 64
	BestSolution: {cost: -245, size: 16, elements:[32, 33, 24, 31, 9, 1, 29, 36, 34, 4, 21, 14, 11, 2, 3, 7]}
> Iteration 340
	BestSolution: {cost: -257, size: 18, elements:[32, 20, 21, 4, 28, 15, 17, 9, 33, 3, 22, 36, 24, 14, 8, 29, 11, 6]}
> Iteration 366
	BestSolution: {cost: -258, size: 17, elements:[14, 19, 31, 4, 26, 25, 23, 18, 9, 21, 24, 34, 11, 2, 36, 3, 32]}
> Iteration 627
	BestSolution: {cost: -269, size: 17, elements:[29, 9, 14, 23, 20, 32, 11, 36, 34, 0, 38, 4, 15, 17, 22, 3, 21]}
-----------------
instance: ../instances/kqbf/kqbf040
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 269, size: 17, elements:[29, 9, 14, 23, 20, 32, 11, 36, 34, 0, 38, 4, 15, 17, 22, 3, 21]}
Knapsack Weight of Best Solution: 132
RunningTime: 0.198 seconds


=============================
instance: ../instances/kqbf/kqbf040
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -194, size: 13, elements:[8, 24, 31, 35, 1, 18, 25, 2, 30, 6, 36, 22, 3]}
> Iteration 1
	BestSolution: {cost: -286, size: 15, elements:[20, 24, 34, 27, 15, 9, 33, 36, 29, 21, 4, 32, 11, 0, 31]}
-----------------
instance: ../instances/kqbf/kqbf040
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 286, size: 15, elements:[20, 24, 34, 27, 15, 9, 33, 36, 29, 21, 4, 32, 11, 0, 31]}
Knapsack Weight of Best Solution: 133
RunningTime: 1.621 seconds


=============================
instance: ../instances/kqbf/kqbf040
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 2
	BestSolution: {cost: -10, size: 3, elements:[20, 13, 0]}
> Iteration 3
	BestSolution: {cost: -12, size: 3, elements:[25, 17, 0]}
> Iteration 4
	BestSolution: {cost: -40, size: 6, elements:[4, 11, 36, 31, 13, 0]}
> Iteration 73
	BestSolution: {cost: -44, size: 6, elements:[1, 16, 37, 21, 27, 0]}
> Iteration 222
	BestSolution: {cost: -54, size: 8, elements:[34, 8, 7, 9, 22, 0, 28, 1]}
> Iteration 301
	BestSolution: {cost: -55, size: 7, elements:[8, 25, 0, 2, 26, 29, 1]}
> Iteration 360
	BestSolution: {cost: -56, size: 7, elements:[8, 22, 35, 24, 25, 26, 0]}
> Iteration 489
	BestSolution: {cost: -68, size: 8, elements:[2, 14, 8, 22, 1, 18, 13, 0]}
> Iteration 547
	BestSolution: {cost: -134, size: 12, elements:[22, 31, 12, 32, 36, 34, 15, 6, 24, 3, 4, 0]}
-----------------
instance: ../instances/kqbf/kqbf040
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 134, size: 12, elements:[22, 31, 12, 32, 36, 34, 15, 6, 24, 3, 4, 0]}
Knapsack Weight of Best Solution: 107
RunningTime: 0.062 seconds


=============================
instance: ../instances/kqbf/kqbf040
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -249, size: 14, elements:[8, 24, 1, 22, 3, 36, 18, 14, 23, 2, 31, 7, 9, 34]}
-----------------
instance: ../instances/kqbf/kqbf040
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 249, size: 14, elements:[8, 24, 1, 22, 3, 36, 18, 14, 23, 2, 31, 7, 9, 34]}
Knapsack Weight of Best Solution: 137
RunningTime: 1.653 seconds


=============================
instance: ../instances/kqbf/kqbf040
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 1
	BestSolution: {cost: -6, size: 2, elements:[3, 1]}
-----------------
instance: ../instances/kqbf/kqbf040
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 6, size: 2, elements:[3, 1]}
Knapsack Weight of Best Solution: 18
RunningTime: 0.04 seconds


=============================
instance: ../instances/kqbf/kqbf040
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -249, size: 14, elements:[3, 8, 1, 24, 22, 36, 18, 14, 23, 2, 31, 7, 9, 34]}
-----------------
instance: ../instances/kqbf/kqbf040
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 249, size: 14, elements:[3, 8, 1, 24, 22, 36, 18, 14, 23, 2, 31, 7, 9, 34]}
Knapsack Weight of Best Solution: 137
RunningTime: 1.671 seconds


=============================
instance: ../instances/kqbf/kqbf060
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -394, size: 23, elements:[4, 28, 55, 45, 44, 7, 51, 46, 26, 21, 11, 3, 27, 57, 39, 30, 22, 8, 17, 9, 32, 6, 49]}
> Iteration 2
	BestSolution: {cost: -414, size: 23, elements:[17, 52, 28, 3, 44, 26, 49, 40, 38, 11, 34, 24, 9, 45, 41, 4, 31, 23, 21, 22, 56, 15, 57]}
> Iteration 11
	BestSolution: {cost: -415, size: 21, elements:[3, 44, 57, 8, 17, 26, 18, 21, 45, 2, 11, 30, 6, 38, 27, 28, 22, 4, 23, 33, 5]}
> Iteration 13
	BestSolution: {cost: -445, size: 23, elements:[17, 28, 40, 16, 3, 19, 26, 42, 11, 38, 49, 34, 44, 56, 51, 55, 4, 24, 53, 59, 2, 35, 23]}
> Iteration 16
	BestSolution: {cost: -454, size: 22, elements:[3, 44, 28, 17, 38, 21, 27, 42, 51, 56, 4, 26, 35, 29, 54, 16, 55, 53, 30, 11, 49, 14]}
> Iteration 68
	BestSolution: {cost: -455, size: 23, elements:[3, 57, 19, 8, 45, 28, 27, 32, 39, 5, 21, 11, 30, 44, 26, 51, 4, 56, 55, 22, 17, 38, 23]}
-----------------
instance: ../instances/kqbf/kqbf060
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 455, size: 23, elements:[3, 57, 19, 8, 45, 28, 27, 32, 39, 5, 21, 11, 30, 44, 26, 51, 4, 56, 55, 22, 17, 38, 23]}
Knapsack Weight of Best Solution: 220
RunningTime: 1.312 seconds


=============================
instance: ../instances/kqbf/kqbf060
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -481, size: 24, elements:[11, 55, 39, 44, 57, 45, 3, 6, 26, 8, 30, 21, 28, 27, 51, 17, 4, 23, 22, 38, 2, 59, 19, 32]}
> Iteration 67
	BestSolution: {cost: -482, size: 24, elements:[21, 44, 11, 39, 5, 57, 45, 3, 27, 8, 51, 28, 55, 6, 26, 32, 4, 30, 22, 38, 17, 19, 2, 56]}
> Iteration 489
	BestSolution: {cost: -491, size: 24, elements:[21, 57, 3, 44, 45, 6, 39, 8, 51, 27, 28, 4, 30, 55, 56, 11, 22, 26, 23, 19, 2, 32, 17, 38]}
-----------------
instance: ../instances/kqbf/kqbf060
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 491, size: 24, elements:[21, 57, 3, 44, 45, 6, 39, 8, 51, 27, 28, 4, 30, 55, 56, 11, 22, 26, 23, 19, 2, 32, 17, 38]}
Knapsack Weight of Best Solution: 212
RunningTime: 2.171 seconds


=============================
instance: ../instances/kqbf/kqbf060
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -9, size: 2, elements:[39, 0]}
> Iteration 2
	BestSolution: {cost: -10, size: 2, elements:[41, 0]}
> Iteration 3
	BestSolution: {cost: -13, size: 4, elements:[33, 4, 57, 0]}
> Iteration 4
	BestSolution: {cost: -22, size: 4, elements:[28, 55, 18, 0]}
> Iteration 6
	BestSolution: {cost: -58, size: 9, elements:[40, 58, 49, 3, 4, 16, 56, 12, 9]}
> Iteration 198
	BestSolution: {cost: -95, size: 8, elements:[24, 50, 11, 45, 37, 16, 27, 0]}
> Iteration 523
	BestSolution: {cost: -121, size: 13, elements:[24, 42, 43, 13, 16, 54, 41, 52, 34, 37, 14, 55, 3]}
-----------------
instance: ../instances/kqbf/kqbf060
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 121, size: 13, elements:[24, 42, 43, 13, 16, 54, 41, 52, 34, 37, 14, 55, 3]}
Knapsack Weight of Best Solution: 164
RunningTime: 0.152 seconds


=============================
instance: ../instances/kqbf/kqbf060
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -446, size: 21, elements:[57, 21, 39, 44, 45, 11, 27, 5, 3, 8, 28, 23, 17, 30, 9, 52, 4, 15, 22, 41, 6]}
> Iteration 1
	BestSolution: {cost: -482, size: 21, elements:[17, 14, 54, 44, 42, 27, 52, 53, 29, 51, 35, 56, 4, 49, 24, 26, 32, 31, 38, 2, 3]}
-----------------
instance: ../instances/kqbf/kqbf060
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 482, size: 21, elements:[17, 14, 54, 44, 42, 27, 52, 53, 29, 51, 35, 56, 4, 49, 24, 26, 32, 31, 38, 2, 3]}
Knapsack Weight of Best Solution: 217
RunningTime: 7.443 seconds


=============================
instance: ../instances/kqbf/kqbf060
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
-----------------
instance: ../instances/kqbf/kqbf060
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 0, size: 0, elements:[]}
Knapsack Weight of Best Solution: 0
RunningTime: 0.081 seconds


=============================
instance: ../instances/kqbf/kqbf060
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -446, size: 21, elements:[23, 28, 11, 45, 21, 44, 57, 39, 8, 27, 3, 5, 17, 30, 9, 52, 4, 15, 22, 41, 6]}
-----------------
instance: ../instances/kqbf/kqbf060
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 446, size: 21, elements:[23, 28, 11, 45, 21, 44, 57, 39, 8, 27, 3, 5, 17, 30, 9, 52, 4, 15, 22, 41, 6]}
Knapsack Weight of Best Solution: 219
RunningTime: 7.514 seconds


=============================
instance: ../instances/kqbf/kqbf060
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -20, size: 5, elements:[21, 54, 28, 46, 1]}
> Iteration 1
	BestSolution: {cost: -138, size: 15, elements:[9, 17, 21, 4, 42, 30, 56, 55, 51, 8, 14, 13, 33, 20, 1]}
> Iteration 6
	BestSolution: {cost: -261, size: 19, elements:[44, 35, 5, 45, 27, 32, 21, 41, 39, 57, 28, 26, 51, 17, 15, 4, 54, 1, 3]}
> Iteration 71
	BestSolution: {cost: -312, size: 21, elements:[20, 2, 29, 54, 14, 42, 44, 56, 55, 7, 47, 4, 33, 22, 30, 38, 35, 32, 17, 51, 49]}
> Iteration 236
	BestSolution: {cost: -379, size: 22, elements:[8, 17, 53, 32, 14, 42, 26, 59, 35, 55, 29, 4, 24, 27, 56, 44, 30, 23, 2, 6, 49, 3]}
> Iteration 871
	BestSolution: {cost: -380, size: 21, elements:[3, 19, 26, 17, 40, 44, 35, 27, 16, 24, 4, 42, 56, 55, 59, 41, 54, 28, 49, 51, 21]}
-----------------
instance: ../instances/kqbf/kqbf060
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 380, size: 21, elements:[3, 19, 26, 17, 40, 44, 35, 27, 16, 24, 4, 42, 56, 55, 59, 41, 54, 28, 49, 51, 21]}
Knapsack Weight of Best Solution: 216
RunningTime: 0.513 seconds


=============================
instance: ../instances/kqbf/kqbf060
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -364, size: 19, elements:[54, 43, 46, 51, 52, 5, 29, 8, 27, 21, 44, 39, 3, 45, 17, 53, 4, 14, 32]}
> Iteration 1
	BestSolution: {cost: -452, size: 23, elements:[17, 49, 42, 44, 26, 3, 28, 40, 11, 16, 38, 34, 21, 51, 56, 4, 55, 19, 30, 27, 29, 35, 24]}
> Iteration 14
	BestSolution: {cost: -453, size: 21, elements:[17, 34, 24, 42, 14, 49, 53, 13, 29, 56, 44, 38, 51, 26, 43, 3, 27, 31, 54, 4, 2]}
> Iteration 26
	BestSolution: {cost: -465, size: 24, elements:[3, 44, 17, 28, 26, 42, 11, 38, 16, 21, 27, 51, 45, 34, 55, 22, 4, 56, 23, 2, 33, 19, 49, 24]}
> Iteration 92
	BestSolution: {cost: -482, size: 21, elements:[17, 44, 53, 49, 52, 38, 29, 26, 54, 31, 35, 51, 27, 56, 32, 3, 24, 4, 2, 14, 42]}
> Iteration 125
	BestSolution: {cost: -491, size: 24, elements:[11, 38, 56, 39, 22, 28, 3, 55, 26, 45, 44, 30, 21, 57, 19, 4, 27, 32, 8, 51, 6, 23, 2, 17]}
-----------------
instance: ../instances/kqbf/kqbf060
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 491, size: 24, elements:[11, 38, 56, 39, 22, 28, 3, 55, 26, 45, 44, 30, 21, 57, 19, 4, 27, 32, 8, 51, 6, 23, 2, 17]}
Knapsack Weight of Best Solution: 212
RunningTime: 6.508 seconds


=============================
instance: ../instances/kqbf/kqbf060
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -22, size: 3, elements:[18, 29, 0]}
> Iteration 14
	BestSolution: {cost: -28, size: 5, elements:[57, 44, 51, 15, 0]}
> Iteration 20
	BestSolution: {cost: -40, size: 7, elements:[5, 57, 54, 58, 52, 48, 1]}
> Iteration 23
	BestSolution: {cost: -47, size: 6, elements:[24, 0, 20, 45, 30, 1]}
> Iteration 49
	BestSolution: {cost: -48, size: 5, elements:[44, 0, 45, 49, 3]}
> Iteration 225
	BestSolution: {cost: -54, size: 6, elements:[16, 33, 20, 18, 56, 0]}
> Iteration 259
	BestSolution: {cost: -65, size: 5, elements:[11, 16, 33, 50, 0]}
> Iteration 297
	BestSolution: {cost: -66, size: 8, elements:[40, 4, 45, 17, 11, 34, 20, 1]}
> Iteration 909
	BestSolution: {cost: -68, size: 6, elements:[52, 44, 9, 18, 24, 0]}
> Iteration 984
	BestSolution: {cost: -112, size: 8, elements:[52, 42, 28, 17, 58, 40, 37, 1]}
-----------------
instance: ../instances/kqbf/kqbf060
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 112, size: 8, elements:[52, 42, 28, 17, 58, 40, 37, 1]}
Knapsack Weight of Best Solution: 99
RunningTime: 0.157 seconds


=============================
instance: ../instances/kqbf/kqbf060
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -465, size: 24, elements:[42, 44, 17, 28, 3, 26, 11, 38, 16, 21, 27, 51, 45, 34, 55, 22, 4, 56, 23, 2, 33, 19, 49, 24]}
> Iteration 12
	BestSolution: {cost: -482, size: 21, elements:[2, 54, 52, 38, 44, 17, 42, 26, 4, 56, 29, 35, 27, 51, 53, 31, 32, 14, 24, 49, 3]}
-----------------
instance: ../instances/kqbf/kqbf060
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 482, size: 21, elements:[2, 54, 52, 38, 44, 17, 42, 26, 4, 56, 29, 35, 27, 51, 53, 31, 32, 14, 24, 49, 3]}
Knapsack Weight of Best Solution: 217
RunningTime: 7.535 seconds


=============================
instance: ../instances/kqbf/kqbf060
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
-----------------
instance: ../instances/kqbf/kqbf060
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 0, size: 0, elements:[]}
Knapsack Weight of Best Solution: 0
RunningTime: 0.085 seconds


=============================
instance: ../instances/kqbf/kqbf060
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -446, size: 21, elements:[23, 28, 11, 45, 21, 44, 57, 39, 8, 27, 3, 5, 17, 30, 9, 52, 4, 15, 22, 41, 6]}
-----------------
instance: ../instances/kqbf/kqbf060
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 446, size: 21, elements:[23, 28, 11, 45, 21, 44, 57, 39, 8, 27, 3, 5, 17, 30, 9, 52, 4, 15, 22, 41, 6]}
Knapsack Weight of Best Solution: 219
RunningTime: 7.366 seconds


=============================
instance: ../instances/kqbf/kqbf080
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -595, size: 29, elements:[17, 53, 29, 3, 31, 1, 45, 54, 32, 9, 65, 44, 2, 13, 75, 42, 71, 23, 27, 56, 66, 40, 70, 36, 24, 11, 4, 10, 20]}
> Iteration 1
	BestSolution: {cost: -645, size: 27, elements:[3, 72, 54, 6, 18, 48, 42, 29, 7, 2, 37, 31, 43, 58, 62, 36, 14, 9, 73, 13, 53, 24, 75, 76, 71, 74, 49]}
> Iteration 4
	BestSolution: {cost: -707, size: 29, elements:[24, 48, 11, 75, 50, 2, 6, 37, 54, 7, 3, 42, 36, 18, 23, 4, 31, 29, 32, 61, 69, 8, 49, 13, 74, 1, 73, 47, 15]}
> Iteration 21
	BestSolution: {cost: -734, size: 29, elements:[36, 23, 74, 75, 7, 2, 6, 31, 18, 11, 48, 3, 42, 13, 54, 4, 37, 58, 70, 69, 24, 61, 14, 50, 60, 8, 49, 44, 66]}
> Iteration 38
	BestSolution: {cost: -739, size: 29, elements:[74, 3, 2, 54, 6, 7, 11, 24, 48, 50, 75, 23, 36, 31, 32, 13, 18, 4, 42, 69, 61, 60, 49, 37, 73, 1, 47, 44, 15]}
> Iteration 219
	BestSolution: {cost: -766, size: 30, elements:[74, 6, 36, 61, 7, 11, 3, 50, 49, 42, 24, 2, 4, 18, 14, 75, 54, 37, 55, 1, 47, 53, 23, 15, 69, 13, 31, 8, 44, 32]}
> Iteration 229
	BestSolution: {cost: -771, size: 31, elements:[36, 53, 14, 74, 7, 69, 13, 18, 44, 49, 61, 31, 8, 3, 4, 42, 54, 1, 2, 32, 47, 15, 51, 68, 60, 37, 50, 11, 20, 6, 21]}
> Iteration 626
	BestSolution: {cost: -773, size: 30, elements:[2, 64, 74, 7, 15, 6, 61, 11, 4, 12, 23, 20, 50, 3, 14, 69, 54, 53, 36, 31, 68, 32, 13, 34, 18, 44, 1, 47, 58, 49]}
> Iteration 862
	BestSolution: {cost: -774, size: 30, elements:[20, 7, 15, 53, 14, 3, 74, 2, 13, 36, 49, 50, 47, 34, 18, 4, 8, 31, 23, 75, 61, 1, 44, 68, 32, 11, 69, 6, 54, 12]}
> Iteration 966
	BestSolution: {cost: -783, size: 31, elements:[74, 3, 6, 24, 50, 11, 7, 54, 49, 2, 18, 75, 42, 4, 1, 55, 61, 8, 76, 47, 71, 52, 73, 13, 44, 23, 34, 69, 51, 32, 36]}
-----------------
instance: ../instances/kqbf/kqbf080
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 783, size: 31, elements:[74, 3, 6, 24, 50, 11, 7, 54, 49, 2, 18, 75, 42, 4, 1, 55, 61, 8, 76, 47, 71, 52, 73, 13, 44, 23, 34, 69, 51, 32, 36]}
Knapsack Weight of Best Solution: 286
RunningTime: 2.968 seconds


=============================
instance: ../instances/kqbf/kqbf080
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -641, size: 28, elements:[17, 54, 23, 11, 48, 19, 2, 39, 42, 18, 3, 29, 4, 12, 71, 75, 59, 7, 27, 24, 52, 9, 73, 10, 69, 36, 32, 77]}
> Iteration 1
	BestSolution: {cost: -670, size: 28, elements:[20, 65, 15, 53, 4, 3, 1, 2, 64, 31, 12, 13, 23, 25, 18, 7, 29, 54, 32, 11, 75, 44, 71, 74, 50, 61, 69, 49]}
> Iteration 2
	BestSolution: {cost: -700, size: 27, elements:[64, 2, 37, 19, 58, 62, 48, 14, 60, 9, 36, 46, 31, 18, 71, 43, 22, 76, 3, 54, 42, 70, 75, 17, 8, 24, 69]}
> Iteration 11
	BestSolution: {cost: -751, size: 30, elements:[20, 7, 36, 48, 23, 31, 53, 65, 47, 15, 2, 4, 50, 18, 75, 11, 3, 13, 42, 8, 54, 49, 37, 25, 10, 24, 44, 6, 74, 61]}
> Iteration 25
	BestSolution: {cost: -761, size: 29, elements:[20, 3, 53, 15, 60, 23, 31, 36, 14, 50, 37, 8, 61, 2, 69, 7, 49, 4, 18, 44, 47, 42, 54, 13, 34, 6, 48, 11, 74]}
> Iteration 28
	BestSolution: {cost: -775, size: 30, elements:[20, 15, 7, 31, 53, 36, 3, 14, 2, 13, 74, 18, 60, 4, 50, 69, 8, 49, 54, 61, 44, 47, 21, 37, 6, 68, 23, 48, 11, 34]}
> Iteration 168
	BestSolution: {cost: -795, size: 31, elements:[20, 15, 3, 14, 50, 53, 4, 36, 2, 32, 7, 31, 49, 74, 54, 11, 6, 75, 61, 18, 13, 44, 42, 65, 1, 23, 8, 69, 47, 68, 34]}
-----------------
instance: ../instances/kqbf/kqbf080
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 795, size: 31, elements:[20, 15, 3, 14, 50, 53, 4, 36, 2, 32, 7, 31, 49, 74, 54, 11, 6, 75, 61, 18, 13, 44, 42, 65, 1, 23, 8, 69, 47, 68, 34]}
Knapsack Weight of Best Solution: 284
RunningTime: 4.222 seconds


=============================
instance: ../instances/kqbf/kqbf080
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -8, size: 2, elements:[73, 0]}
> Iteration 1
	BestSolution: {cost: -12, size: 3, elements:[64, 21, 1]}
> Iteration 3
	BestSolution: {cost: -32, size: 5, elements:[20, 1, 4, 16, 2]}
> Iteration 22
	BestSolution: {cost: -37, size: 4, elements:[37, 22, 51, 0]}
> Iteration 96
	BestSolution: {cost: -41, size: 5, elements:[37, 33, 60, 4, 1]}
> Iteration 146
	BestSolution: {cost: -49, size: 9, elements:[14, 50, 76, 7, 24, 61, 8, 71, 2]}
> Iteration 173
	BestSolution: {cost: -54, size: 7, elements:[50, 31, 32, 48, 7, 12, 1]}
> Iteration 245
	BestSolution: {cost: -59, size: 8, elements:[72, 11, 74, 64, 68, 1, 77, 0]}
> Iteration 250
	BestSolution: {cost: -155, size: 13, elements:[65, 11, 48, 75, 31, 2, 58, 41, 47, 8, 64, 45, 1]}
-----------------
instance: ../instances/kqbf/kqbf080
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 155, size: 13, elements:[65, 11, 48, 75, 31, 2, 58, 41, 47, 8, 64, 45, 1]}
Knapsack Weight of Best Solution: 132
RunningTime: 0.279 seconds


=============================
instance: ../instances/kqbf/kqbf080
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -711, size: 29, elements:[24, 76, 22, 53, 39, 75, 52, 50, 49, 7, 74, 3, 14, 55, 1, 13, 21, 71, 62, 73, 2, 47, 18, 44, 42, 8, 4, 69, 36]}
> Iteration 2
	BestSolution: {cost: -734, size: 29, elements:[32, 54, 1, 11, 2, 3, 4, 29, 15, 50, 31, 12, 10, 18, 61, 75, 7, 42, 69, 49, 36, 53, 74, 24, 13, 23, 44, 71, 65]}
> Iteration 7
	BestSolution: {cost: -761, size: 29, elements:[16, 48, 23, 31, 7, 11, 54, 3, 75, 18, 2, 42, 6, 4, 36, 13, 44, 61, 8, 60, 69, 49, 37, 50, 73, 24, 66, 10, 74]}
> Iteration 166
	BestSolution: {cost: -767, size: 30, elements:[74, 13, 7, 23, 25, 53, 15, 3, 1, 31, 2, 75, 4, 65, 11, 54, 32, 18, 36, 48, 42, 35, 47, 8, 49, 50, 24, 37, 69, 71]}
> Iteration 182
	BestSolution: {cost: -772, size: 30, elements:[20, 61, 55, 44, 64, 12, 14, 68, 6, 11, 50, 15, 4, 23, 2, 3, 74, 18, 7, 47, 49, 1, 69, 34, 53, 13, 54, 31, 36, 32]}
> Iteration 417
	BestSolution: {cost: -773, size: 30, elements:[6, 15, 64, 20, 14, 50, 12, 53, 3, 74, 7, 36, 31, 2, 13, 18, 23, 4, 47, 44, 49, 34, 69, 61, 54, 32, 1, 11, 68, 58]}
> Iteration 876
	BestSolution: {cost: -777, size: 30, elements:[69, 24, 74, 7, 61, 42, 6, 14, 50, 49, 55, 3, 76, 39, 75, 11, 2, 4, 18, 44, 54, 23, 36, 52, 53, 13, 1, 71, 47, 32]}
> Iteration 940
	BestSolution: {cost: -787, size: 31, elements:[69, 34, 73, 76, 54, 44, 49, 4, 3, 7, 42, 13, 18, 2, 1, 75, 71, 24, 70, 51, 74, 9, 58, 31, 32, 53, 36, 14, 20, 47, 50]}
-----------------
instance: ../instances/kqbf/kqbf080
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 787, size: 31, elements:[69, 34, 73, 76, 54, 44, 49, 4, 3, 7, 42, 13, 18, 2, 1, 75, 71, 24, 70, 51, 74, 9, 58, 31, 32, 53, 36, 14, 20, 47, 50]}
Knapsack Weight of Best Solution: 285
RunningTime: 25.22 seconds


=============================
instance: ../instances/kqbf/kqbf080
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -9, size: 2, elements:[43, 0]}
-----------------
instance: ../instances/kqbf/kqbf080
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 9, size: 2, elements:[43, 0]}
Knapsack Weight of Best Solution: 26
RunningTime: 0.156 seconds


=============================
instance: ../instances/kqbf/kqbf080
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -648, size: 25, elements:[0, 72, 25, 37, 51, 49, 30, 13, 18, 52, 47, 24, 73, 2, 71, 1, 74, 3, 53, 7, 42, 54, 76, 75, 62]}
> Iteration 1
	BestSolution: {cost: -698, size: 27, elements:[49, 7, 74, 3, 53, 1, 13, 25, 72, 0, 51, 47, 73, 24, 52, 71, 76, 75, 55, 44, 70, 2, 42, 18, 4, 67, 69]}
-----------------
instance: ../instances/kqbf/kqbf080
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 698, size: 27, elements:[49, 7, 74, 3, 53, 1, 13, 25, 72, 0, 51, 47, 73, 24, 52, 71, 76, 75, 55, 44, 70, 2, 42, 18, 4, 67, 69]}
Knapsack Weight of Best Solution: 287
RunningTime: 22.912 seconds


=============================
instance: ../instances/kqbf/kqbf080
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -249, size: 16, elements:[2, 12, 4, 10, 18, 34, 20, 6, 74, 42, 19, 36, 62, 48, 40, 3]}
> Iteration 11
	BestSolution: {cost: -341, size: 21, elements:[3, 1, 55, 61, 69, 74, 53, 23, 56, 44, 29, 49, 75, 73, 32, 51, 31, 68, 11, 64, 2]}
> Iteration 12
	BestSolution: {cost: -541, size: 28, elements:[74, 1, 10, 13, 44, 34, 76, 12, 32, 73, 70, 14, 55, 5, 64, 63, 3, 49, 9, 47, 45, 27, 11, 2, 62, 54, 71, 20]}
> Iteration 252
	BestSolution: {cost: -598, size: 30, elements:[7, 42, 50, 31, 49, 38, 4, 18, 15, 66, 75, 10, 73, 32, 13, 74, 11, 2, 54, 65, 23, 47, 48, 24, 52, 6, 3, 36, 8, 17]}
-----------------
instance: ../instances/kqbf/kqbf080
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 598, size: 30, elements:[7, 42, 50, 31, 49, 38, 4, 18, 15, 66, 75, 10, 73, 32, 13, 74, 11, 2, 54, 65, 23, 47, 48, 24, 52, 6, 3, 36, 8, 17]}
Knapsack Weight of Best Solution: 271
RunningTime: 1.161 seconds


=============================
instance: ../instances/kqbf/kqbf080
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -550, size: 26, elements:[56, 0, 41, 1, 29, 59, 25, 64, 3, 31, 43, 48, 8, 2, 47, 42, 19, 58, 37, 18, 62, 24, 71, 9, 36, 20]}
> Iteration 1
	BestSolution: {cost: -689, size: 26, elements:[19, 62, 36, 29, 23, 2, 64, 18, 12, 20, 48, 37, 43, 47, 31, 1, 71, 58, 46, 9, 42, 3, 70, 75, 24, 53]}
> Iteration 2
	BestSolution: {cost: -717, size: 27, elements:[17, 64, 62, 19, 76, 71, 60, 48, 9, 46, 37, 23, 2, 58, 29, 18, 54, 31, 69, 36, 42, 3, 75, 73, 24, 43, 32]}
> Iteration 3
	BestSolution: {cost: -730, size: 31, elements:[6, 20, 4, 44, 11, 67, 70, 2, 3, 34, 54, 42, 18, 58, 76, 14, 13, 51, 49, 1, 12, 43, 61, 74, 55, 68, 57, 63, 69, 32, 36]}
> Iteration 5
	BestSolution: {cost: -746, size: 31, elements:[69, 48, 42, 36, 24, 23, 39, 7, 53, 75, 3, 31, 2, 18, 54, 13, 4, 65, 11, 44, 6, 70, 9, 74, 14, 58, 76, 71, 12, 20, 49]}
> Iteration 9
	BestSolution: {cost: -759, size: 29, elements:[23, 6, 11, 48, 37, 18, 60, 54, 2, 3, 42, 19, 36, 69, 4, 61, 8, 50, 31, 58, 14, 7, 15, 44, 20, 49, 47, 13, 21]}
> Iteration 30
	BestSolution: {cost: -761, size: 29, elements:[6, 34, 37, 36, 53, 13, 49, 23, 69, 44, 18, 14, 50, 61, 60, 4, 20, 3, 7, 15, 54, 31, 2, 8, 47, 42, 48, 11, 74]}
> Iteration 31
	BestSolution: {cost: -788, size: 31, elements:[74, 69, 7, 49, 76, 61, 4, 75, 52, 24, 50, 3, 55, 11, 1, 42, 2, 54, 18, 6, 44, 14, 13, 8, 68, 53, 34, 47, 36, 71, 32]}
> Iteration 155
	BestSolution: {cost: -800, size: 31, elements:[34, 45, 68, 3, 44, 6, 20, 14, 53, 31, 15, 13, 7, 21, 74, 1, 49, 47, 50, 4, 61, 2, 54, 11, 8, 36, 18, 32, 69, 60, 57]}
> Iteration 591
	BestSolution: {cost: -802, size: 31, elements:[20, 53, 4, 31, 8, 49, 2, 68, 13, 47, 3, 75, 1, 36, 14, 32, 18, 15, 7, 74, 50, 34, 11, 54, 61, 44, 69, 23, 6, 42, 63]}
-----------------
instance: ../instances/kqbf/kqbf080
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 802, size: 31, elements:[20, 53, 4, 31, 8, 49, 2, 68, 13, 47, 3, 75, 1, 36, 14, 32, 18, 15, 7, 74, 50, 34, 11, 54, 61, 44, 69, 23, 6, 42, 63]}
Knapsack Weight of Best Solution: 284
RunningTime: 23.821 seconds


=============================
instance: ../instances/kqbf/kqbf080
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -130, size: 10, elements:[2, 7, 18, 54, 13, 23, 1, 69, 8, 3]}
> Iteration 319
	BestSolution: {cost: -228, size: 13, elements:[48, 19, 42, 70, 71, 23, 28, 9, 37, 20, 17, 44, 2]}
-----------------
instance: ../instances/kqbf/kqbf080
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 228, size: 13, elements:[48, 19, 42, 70, 71, 23, 28, 9, 37, 20, 17, 44, 2]}
Knapsack Weight of Best Solution: 122
RunningTime: 0.257 seconds


=============================
instance: ../instances/kqbf/kqbf080
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -648, size: 25, elements:[0, 72, 25, 37, 51, 49, 30, 13, 18, 52, 47, 24, 73, 2, 71, 1, 74, 3, 53, 7, 42, 54, 76, 75, 62]}
> Iteration 1
	BestSolution: {cost: -679, size: 28, elements:[17, 77, 29, 3, 48, 23, 11, 54, 31, 59, 8, 50, 75, 2, 4, 42, 18, 7, 61, 69, 36, 32, 15, 35, 53, 65, 47, 25]}
> Iteration 2
	BestSolution: {cost: -698, size: 27, elements:[49, 7, 74, 3, 53, 1, 13, 25, 72, 0, 51, 47, 73, 24, 52, 71, 76, 75, 55, 44, 70, 2, 42, 18, 4, 67, 69]}
> Iteration 4
	BestSolution: {cost: -741, size: 29, elements:[54, 3, 42, 6, 48, 11, 7, 2, 18, 31, 75, 23, 36, 4, 13, 8, 19, 37, 60, 69, 61, 44, 49, 50, 14, 58, 39, 24, 21]}
> Iteration 8
	BestSolution: {cost: -743, size: 28, elements:[15, 3, 53, 20, 7, 31, 36, 38, 14, 50, 32, 2, 4, 54, 18, 13, 69, 44, 49, 61, 60, 1, 51, 42, 37, 47, 8, 58]}
> Iteration 31
	BestSolution: {cost: -773, size: 29, elements:[20, 18, 3, 14, 2, 4, 15, 7, 53, 36, 31, 50, 47, 49, 8, 42, 61, 69, 44, 54, 6, 37, 60, 13, 1, 34, 68, 74, 11]}
> Iteration 192
	BestSolution: {cost: -787, size: 31, elements:[69, 34, 73, 76, 54, 44, 49, 4, 3, 7, 42, 13, 18, 2, 1, 75, 71, 24, 70, 51, 74, 9, 58, 31, 32, 53, 36, 14, 20, 47, 50]}
> Iteration 949
	BestSolution: {cost: -795, size: 31, elements:[20, 53, 31, 4, 3, 15, 65, 7, 36, 54, 13, 2, 18, 14, 44, 42, 69, 23, 32, 75, 50, 11, 61, 8, 49, 6, 74, 47, 1, 68, 34]}
-----------------
instance: ../instances/kqbf/kqbf080
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 795, size: 31, elements:[20, 53, 31, 4, 3, 15, 65, 7, 36, 54, 13, 2, 18, 14, 44, 42, 69, 23, 32, 75, 50, 11, 61, 8, 49, 6, 74, 47, 1, 68, 34]}
Knapsack Weight of Best Solution: 284
RunningTime: 24.635 seconds


=============================
instance: ../instances/kqbf/kqbf080
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -3, size: 2, elements:[79, 0]}
> Iteration 3
	BestSolution: {cost: -9, size: 2, elements:[43, 0]}
-----------------
instance: ../instances/kqbf/kqbf080
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 9, size: 2, elements:[43, 0]}
Knapsack Weight of Best Solution: 26
RunningTime: 0.149 seconds


=============================
instance: ../instances/kqbf/kqbf080
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -585, size: 24, elements:[43, 48, 0, 41, 24, 64, 76, 62, 37, 2, 58, 47, 42, 19, 71, 1, 18, 22, 54, 52, 46, 49, 51, 3]}
> Iteration 1
	BestSolution: {cost: -698, size: 27, elements:[49, 7, 74, 3, 53, 1, 13, 25, 72, 0, 51, 47, 73, 24, 52, 71, 76, 75, 55, 44, 70, 2, 42, 18, 4, 67, 69]}
-----------------
instance: ../instances/kqbf/kqbf080
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 698, size: 27, elements:[49, 7, 74, 3, 53, 1, 13, 25, 72, 0, 51, 47, 73, 24, 52, 71, 76, 75, 55, 44, 70, 2, 42, 18, 4, 67, 69]}
Knapsack Weight of Best Solution: 287
RunningTime: 22.489 seconds


=============================
instance: ../instances/kqbf/kqbf100
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -799, size: 35, elements:[51, 36, 97, 35, 41, 70, 52, 40, 31, 27, 81, 30, 74, 64, 34, 88, 89, 38, 11, 24, 80, 77, 98, 33, 23, 68, 2, 85, 10, 22, 28, 71, 65, 17, 49]}
> Iteration 3
	BestSolution: {cost: -909, size: 38, elements:[92, 11, 58, 68, 93, 57, 43, 19, 56, 33, 89, 64, 99, 12, 38, 85, 62, 74, 10, 34, 25, 27, 51, 71, 77, 16, 63, 24, 81, 55, 72, 14, 44, 69, 79, 20, 6, 17]}
> Iteration 4
	BestSolution: {cost: -936, size: 35, elements:[49, 22, 18, 5, 23, 48, 57, 34, 10, 38, 92, 70, 94, 67, 44, 62, 56, 73, 90, 82, 9, 68, 7, 29, 63, 2, 51, 85, 40, 26, 17, 21, 33, 69, 74]}
> Iteration 14
	BestSolution: {cost: -963, size: 36, elements:[84, 32, 21, 94, 5, 83, 29, 63, 2, 22, 82, 23, 62, 9, 57, 61, 78, 34, 6, 10, 51, 13, 54, 91, 44, 56, 17, 33, 90, 96, 48, 18, 7, 95, 69, 74]}
> Iteration 16
	BestSolution: {cost: -1005, size: 33, elements:[57, 68, 80, 43, 56, 51, 78, 38, 74, 33, 66, 17, 89, 29, 18, 2, 22, 14, 23, 39, 49, 95, 31, 37, 52, 10, 44, 91, 62, 7, 3, 21, 24]}
> Iteration 46
	BestSolution: {cost: -1151, size: 38, elements:[37, 53, 65, 11, 49, 74, 3, 23, 21, 10, 68, 24, 79, 47, 62, 71, 22, 30, 32, 91, 93, 95, 29, 14, 39, 52, 2, 17, 90, 96, 51, 7, 15, 63, 84, 25, 44, 16]}
> Iteration 134
	BestSolution: {cost: -1213, size: 39, elements:[43, 11, 68, 57, 78, 66, 22, 38, 62, 17, 39, 63, 74, 29, 91, 82, 32, 84, 96, 49, 95, 90, 10, 18, 51, 23, 3, 24, 21, 7, 14, 71, 89, 64, 2, 93, 44, 33, 6]}
-----------------
instance: ../instances/kqbf/kqbf100
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 1213, size: 39, elements:[43, 11, 68, 57, 78, 66, 22, 38, 62, 17, 39, 63, 74, 29, 91, 82, 32, 84, 96, 49, 95, 90, 10, 18, 51, 23, 3, 24, 21, 7, 14, 71, 89, 64, 2, 93, 44, 33, 6]}
Knapsack Weight of Best Solution: 335
RunningTime: 5.78 seconds


=============================
instance: ../instances/kqbf/kqbf100
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -1018, size: 40, elements:[21, 94, 20, 6, 69, 33, 73, 13, 45, 92, 77, 83, 71, 64, 10, 74, 67, 91, 17, 90, 16, 38, 96, 53, 11, 72, 25, 63, 34, 27, 93, 18, 51, 3, 22, 24, 82, 95, 56, 2]}
> Iteration 8
	BestSolution: {cost: -1032, size: 38, elements:[49, 0, 92, 94, 20, 73, 44, 18, 37, 29, 89, 3, 84, 96, 93, 2, 42, 7, 10, 63, 16, 71, 45, 90, 23, 34, 69, 54, 33, 32, 62, 6, 91, 21, 64, 74, 9, 24]}
> Iteration 10
	BestSolution: {cost: -1046, size: 37, elements:[11, 43, 68, 12, 30, 38, 51, 57, 84, 74, 22, 82, 3, 66, 78, 17, 39, 29, 95, 62, 42, 85, 32, 44, 10, 14, 86, 63, 6, 91, 64, 21, 33, 24, 47, 90, 49]}
> Iteration 11
	BestSolution: {cost: -1096, size: 36, elements:[49, 23, 22, 21, 5, 32, 44, 70, 9, 62, 74, 63, 48, 7, 51, 10, 2, 29, 90, 84, 78, 96, 15, 68, 61, 18, 3, 17, 39, 85, 31, 95, 14, 24, 89, 79]}
> Iteration 21
	BestSolution: {cost: -1204, size: 37, elements:[49, 68, 37, 39, 3, 32, 1, 2, 29, 23, 84, 10, 62, 78, 22, 57, 38, 66, 63, 82, 91, 51, 17, 47, 18, 90, 44, 42, 14, 95, 7, 74, 21, 96, 24, 31, 9]}
> Iteration 109
	BestSolution: {cost: -1219, size: 37, elements:[49, 44, 84, 32, 89, 3, 2, 66, 18, 78, 29, 39, 42, 62, 37, 10, 22, 23, 51, 74, 52, 7, 95, 38, 21, 96, 17, 63, 90, 14, 31, 24, 68, 47, 91, 82, 9]}
> Iteration 861
	BestSolution: {cost: -1228, size: 38, elements:[49, 21, 32, 22, 3, 24, 74, 84, 91, 79, 10, 23, 95, 47, 62, 93, 29, 39, 31, 90, 44, 63, 7, 2, 37, 52, 18, 51, 17, 14, 96, 89, 68, 15, 78, 66, 71, 9]}
-----------------
instance: ../instances/kqbf/kqbf100
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 1228, size: 38, elements:[49, 21, 32, 22, 3, 24, 74, 84, 91, 79, 10, 23, 95, 47, 62, 93, 29, 39, 31, 90, 44, 63, 7, 2, 37, 52, 18, 51, 17, 14, 96, 89, 68, 15, 78, 66, 71, 9]}
Knapsack Weight of Best Solution: 345
RunningTime: 8.766 seconds


=============================
instance: ../instances/kqbf/kqbf100
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -3, size: 2, elements:[72, 0]}
> Iteration 1
	BestSolution: {cost: -6, size: 2, elements:[90, 0]}
> Iteration 5
	BestSolution: {cost: -17, size: 3, elements:[58, 98, 0]}
> Iteration 6
	BestSolution: {cost: -18, size: 3, elements:[74, 14, 0]}
> Iteration 10
	BestSolution: {cost: -23, size: 3, elements:[44, 63, 2]}
> Iteration 25
	BestSolution: {cost: -58, size: 8, elements:[74, 81, 30, 62, 32, 26, 5, 0]}
> Iteration 138
	BestSolution: {cost: -59, size: 7, elements:[6, 20, 50, 33, 85, 93, 0]}
> Iteration 163
	BestSolution: {cost: -60, size: 9, elements:[97, 0, 25, 85, 28, 45, 3, 22, 2]}
> Iteration 179
	BestSolution: {cost: -78, size: 9, elements:[68, 2, 37, 36, 96, 97, 41, 54, 0]}
> Iteration 537
	BestSolution: {cost: -122, size: 8, elements:[94, 21, 22, 23, 73, 41, 72, 2]}
-----------------
instance: ../instances/kqbf/kqbf100
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 122, size: 8, elements:[94, 21, 22, 23, 73, 41, 72, 2]}
Knapsack Weight of Best Solution: 105
RunningTime: 0.416 seconds


=============================
instance: ../instances/kqbf/kqbf100
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -1101, size: 39, elements:[15, 21, 53, 11, 3, 30, 10, 6, 12, 84, 47, 32, 91, 69, 64, 71, 24, 81, 75, 74, 25, 77, 79, 72, 93, 16, 45, 85, 67, 38, 22, 62, 63, 44, 14, 68, 96, 95, 20]}
> Iteration 2
	BestSolution: {cost: -1215, size: 38, elements:[49, 37, 68, 57, 39, 38, 82, 63, 22, 14, 17, 91, 66, 29, 84, 3, 10, 2, 18, 51, 78, 96, 74, 89, 44, 62, 23, 7, 90, 95, 1, 21, 32, 47, 42, 24, 93, 71]}
> Iteration 142
	BestSolution: {cost: -1234, size: 40, elements:[49, 21, 11, 3, 32, 24, 22, 78, 84, 63, 96, 82, 74, 38, 62, 39, 57, 68, 10, 91, 71, 17, 18, 29, 90, 34, 42, 44, 14, 64, 66, 89, 2, 95, 51, 23, 7, 93, 47, 69]}
-----------------
instance: ../instances/kqbf/kqbf100
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 1234, size: 40, elements:[49, 21, 11, 3, 32, 24, 22, 78, 84, 63, 96, 82, 74, 38, 62, 39, 57, 68, 10, 91, 71, 17, 18, 29, 90, 34, 42, 44, 14, 64, 66, 89, 2, 95, 51, 23, 7, 93, 47, 69]}
Knapsack Weight of Best Solution: 343
RunningTime: 78.697 seconds


=============================
instance: ../instances/kqbf/kqbf100
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 4
	BestSolution: {cost: -1, size: 2, elements:[99, 0]}
-----------------
instance: ../instances/kqbf/kqbf100
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 1, size: 2, elements:[99, 0]}
Knapsack Weight of Best Solution: 21
RunningTime: 0.223 seconds


=============================
instance: ../instances/kqbf/kqbf100
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -984, size: 34, elements:[63, 68, 20, 61, 44, 84, 12, 85, 16, 10, 2, 45, 92, 9, 79, 67, 48, 13, 15, 72, 58, 71, 97, 59, 4, 5, 51, 17, 70, 73, 7, 23, 69, 49]}
> Iteration 1
	BestSolution: {cost: -1077, size: 35, elements:[17, 68, 11, 57, 19, 43, 56, 10, 38, 51, 7, 74, 33, 50, 85, 64, 86, 22, 14, 62, 44, 18, 28, 63, 29, 95, 93, 23, 91, 90, 96, 71, 78, 2, 49]}
-----------------
instance: ../instances/kqbf/kqbf100
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 1077, size: 35, elements:[17, 68, 11, 57, 19, 43, 56, 10, 38, 51, 7, 74, 33, 50, 85, 64, 86, 22, 14, 62, 44, 18, 28, 63, 29, 95, 93, 23, 91, 90, 96, 71, 78, 2, 49]}
Knapsack Weight of Best Solution: 345
RunningTime: 70.042 seconds


=============================
instance: ../instances/kqbf/kqbf100
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -376, size: 24, elements:[62, 24, 71, 21, 20, 33, 18, 5, 15, 11, 73, 87, 90, 53, 6, 34, 3, 78, 32, 72, 10, 42, 12, 7]}
> Iteration 11
	BestSolution: {cost: -454, size: 31, elements:[27, 24, 68, 40, 41, 3, 16, 71, 69, 91, 10, 1, 84, 80, 33, 47, 22, 12, 85, 4, 92, 66, 64, 62, 44, 38, 58, 63, 14, 17, 49]}
> Iteration 19
	BestSolution: {cost: -469, size: 24, elements:[56, 61, 45, 2, 53, 10, 97, 83, 18, 27, 70, 28, 13, 69, 33, 23, 12, 51, 17, 48, 9, 85, 15, 1]}
> Iteration 48
	BestSolution: {cost: -613, size: 32, elements:[97, 3, 2, 80, 49, 40, 9, 4, 32, 34, 51, 73, 37, 12, 85, 48, 29, 92, 18, 71, 79, 84, 61, 78, 5, 94, 10, 39, 16, 23, 7, 17]}
> Iteration 54
	BestSolution: {cost: -621, size: 36, elements:[23, 82, 28, 42, 6, 75, 64, 24, 54, 7, 95, 93, 10, 88, 36, 51, 77, 73, 25, 30, 38, 99, 43, 62, 89, 81, 52, 2, 98, 74, 56, 58, 63, 33, 55, 14]}
> Iteration 112
	BestSolution: {cost: -700, size: 35, elements:[11, 71, 39, 92, 12, 84, 93, 13, 91, 41, 21, 63, 58, 72, 29, 68, 59, 4, 20, 44, 10, 80, 3, 6, 32, 96, 2, 16, 53, 34, 47, 42, 65, 49, 17]}
> Iteration 125
	BestSolution: {cost: -752, size: 37, elements:[92, 9, 53, 10, 13, 16, 1, 61, 12, 15, 82, 48, 63, 39, 96, 14, 84, 91, 20, 45, 72, 77, 67, 68, 71, 59, 2, 21, 83, 69, 41, 54, 17, 90, 75, 6, 49]}
> Iteration 264
	BestSolution: {cost: -911, size: 35, elements:[24, 84, 57, 81, 88, 69, 42, 34, 20, 2, 7, 26, 6, 38, 28, 25, 62, 71, 33, 50, 63, 18, 22, 16, 64, 14, 85, 72, 67, 19, 74, 39, 44, 10, 17]}
-----------------
instance: ../instances/kqbf/kqbf100
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 911, size: 35, elements:[24, 84, 57, 81, 88, 69, 42, 34, 20, 2, 7, 26, 6, 38, 28, 25, 62, 71, 33, 50, 63, 18, 22, 16, 64, 14, 85, 72, 67, 19, 74, 39, 44, 10, 17]}
Knapsack Weight of Best Solution: 343
RunningTime: 1.976 seconds


=============================
instance: ../instances/kqbf/kqbf100
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -961, size: 33, elements:[21, 80, 55, 81, 15, 61, 9, 2, 36, 51, 27, 68, 16, 17, 1, 98, 35, 45, 23, 10, 30, 74, 38, 7, 69, 31, 70, 28, 41, 24, 62, 22, 50]}
> Iteration 1
	BestSolution: {cost: -973, size: 33, elements:[74, 26, 23, 68, 94, 27, 31, 22, 95, 2, 51, 9, 70, 17, 56, 69, 7, 38, 10, 62, 24, 81, 30, 16, 1, 28, 42, 39, 18, 82, 34, 41, 63]}
> Iteration 2
	BestSolution: {cost: -1111, size: 39, elements:[49, 44, 15, 61, 63, 96, 81, 62, 97, 17, 89, 10, 9, 21, 47, 69, 84, 3, 7, 23, 2, 24, 75, 70, 22, 52, 95, 31, 74, 18, 51, 14, 79, 71, 39, 68, 28, 91, 67]}
> Iteration 5
	BestSolution: {cost: -1215, size: 38, elements:[49, 37, 68, 57, 39, 38, 82, 63, 22, 14, 17, 91, 66, 29, 84, 3, 10, 2, 18, 51, 78, 96, 74, 89, 44, 62, 23, 7, 90, 95, 1, 21, 32, 47, 42, 24, 93, 71]}
> Iteration 89
	BestSolution: {cost: -1220, size: 37, elements:[49, 84, 51, 9, 10, 3, 32, 7, 21, 63, 22, 74, 23, 2, 29, 37, 62, 39, 78, 68, 31, 90, 17, 18, 44, 14, 96, 89, 24, 95, 52, 91, 47, 66, 15, 71, 42]}
> Iteration 705
	BestSolution: {cost: -1227, size: 38, elements:[49, 84, 57, 89, 44, 18, 2, 10, 22, 3, 14, 68, 39, 17, 66, 29, 78, 51, 63, 62, 42, 7, 96, 37, 74, 23, 38, 95, 91, 82, 93, 47, 24, 32, 21, 90, 52, 11]}
> Iteration 888
	BestSolution: {cost: -1234, size: 40, elements:[49, 21, 11, 3, 32, 24, 22, 78, 84, 63, 96, 82, 74, 38, 62, 39, 57, 68, 10, 91, 71, 17, 18, 29, 90, 34, 42, 44, 14, 64, 66, 89, 2, 95, 51, 23, 7, 93, 47, 69]}
-----------------
instance: ../instances/kqbf/kqbf100
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 1234, size: 40, elements:[49, 21, 11, 3, 32, 24, 22, 78, 84, 63, 96, 82, 74, 38, 62, 39, 57, 68, 10, 91, 71, 17, 18, 29, 90, 34, 42, 44, 14, 64, 66, 89, 2, 95, 51, 23, 7, 93, 47, 69]}
Knapsack Weight of Best Solution: 343
RunningTime: 72.793 seconds


=============================
instance: ../instances/kqbf/kqbf100
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -41, size: 6, elements:[56, 4, 94, 86, 72, 0]}
> Iteration 26
	BestSolution: {cost: -51, size: 6, elements:[73, 44, 62, 21, 72, 2]}
> Iteration 31
	BestSolution: {cost: -58, size: 9, elements:[73, 33, 2, 68, 6, 22, 72, 83, 4]}
> Iteration 270
	BestSolution: {cost: -62, size: 8, elements:[94, 29, 62, 73, 55, 92, 61, 0]}
> Iteration 351
	BestSolution: {cost: -91, size: 7, elements:[22, 18, 31, 52, 74, 20, 2]}
> Iteration 733
	BestSolution: {cost: -116, size: 12, elements:[2, 97, 20, 6, 45, 34, 37, 64, 33, 27, 5, 0]}
-----------------
instance: ../instances/kqbf/kqbf100
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 116, size: 12, elements:[2, 97, 20, 6, 45, 34, 37, 64, 33, 27, 5, 0]}
Knapsack Weight of Best Solution: 121
RunningTime: 0.425 seconds


=============================
instance: ../instances/kqbf/kqbf100
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -947, size: 32, elements:[87, 7, 56, 58, 5, 40, 51, 73, 23, 60, 10, 18, 2, 29, 17, 85, 63, 84, 22, 49, 44, 52, 95, 90, 68, 62, 47, 39, 91, 15, 96, 24]}
> Iteration 1
	BestSolution: {cost: -1077, size: 35, elements:[17, 68, 11, 57, 19, 43, 56, 10, 38, 51, 7, 74, 33, 50, 85, 64, 86, 22, 14, 62, 44, 18, 28, 63, 29, 95, 93, 23, 91, 90, 96, 71, 78, 2, 49]}
> Iteration 2
	BestSolution: {cost: -1149, size: 35, elements:[49, 40, 22, 84, 2, 29, 32, 3, 18, 39, 78, 66, 14, 51, 17, 68, 63, 85, 31, 44, 7, 23, 62, 90, 95, 96, 10, 24, 47, 91, 37, 42, 74, 21, 73]}
> Iteration 4
	BestSolution: {cost: -1180, size: 36, elements:[49, 39, 37, 68, 28, 31, 23, 74, 51, 17, 29, 2, 14, 22, 18, 7, 95, 96, 90, 62, 44, 63, 10, 3, 78, 91, 86, 47, 25, 24, 79, 93, 85, 84, 32, 11]}
> Iteration 49
	BestSolution: {cost: -1219, size: 37, elements:[49, 89, 32, 29, 39, 37, 3, 84, 66, 2, 18, 78, 22, 14, 51, 17, 68, 31, 74, 96, 91, 82, 95, 23, 90, 44, 62, 7, 63, 10, 47, 52, 21, 24, 38, 42, 9]}
> Iteration 347
	BestSolution: {cost: -1234, size: 40, elements:[49, 21, 11, 3, 32, 24, 22, 78, 84, 63, 96, 82, 74, 38, 62, 39, 57, 68, 10, 91, 71, 17, 18, 29, 90, 34, 42, 44, 14, 64, 66, 89, 2, 95, 51, 23, 7, 93, 47, 69]}
-----------------
instance: ../instances/kqbf/kqbf100
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 1234, size: 40, elements:[49, 21, 11, 3, 32, 24, 22, 78, 84, 63, 96, 82, 74, 38, 62, 39, 57, 68, 10, 91, 71, 17, 18, 29, 90, 34, 42, 44, 14, 64, 66, 89, 2, 95, 51, 23, 7, 93, 47, 69]}
Knapsack Weight of Best Solution: 343
RunningTime: 78.562 seconds


=============================
instance: ../instances/kqbf/kqbf100
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 2
	BestSolution: {cost: -1, size: 2, elements:[99, 0]}
-----------------
instance: ../instances/kqbf/kqbf100
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 1, size: 2, elements:[99, 0]}
Knapsack Weight of Best Solution: 21
RunningTime: 0.222 seconds


=============================
instance: ../instances/kqbf/kqbf100
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -905, size: 34, elements:[10, 43, 57, 84, 68, 11, 12, 19, 44, 85, 61, 62, 79, 45, 3, 97, 36, 48, 63, 51, 17, 4, 86, 70, 28, 81, 55, 15, 99, 14, 98, 2, 7, 16]}
> Iteration 1
	BestSolution: {cost: -1077, size: 35, elements:[17, 68, 11, 57, 19, 43, 56, 10, 38, 51, 7, 74, 33, 50, 85, 64, 86, 22, 14, 62, 44, 18, 28, 63, 29, 95, 93, 23, 91, 90, 96, 71, 78, 2, 49]}
-----------------
instance: ../instances/kqbf/kqbf100
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 1077, size: 35, elements:[17, 68, 11, 57, 19, 43, 56, 10, 38, 51, 7, 74, 33, 50, 85, 64, 86, 22, 14, 62, 44, 18, 28, 63, 29, 95, 93, 23, 91, 90, 96, 71, 78, 2, 49]}
Knapsack Weight of Best Solution: 345
RunningTime: 70.309 seconds


=============================
instance: ../instances/kqbf/kqbf200
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -3377, size: 77, elements:[5, 112, 42, 82, 101, 171, 93, 83, 172, 16, 81, 49, 163, 48, 105, 31, 154, 110, 92, 175, 173, 196, 157, 145, 147, 72, 185, 195, 56, 86, 4, 6, 7, 117, 63, 140, 77, 148, 19, 166, 125, 60, 106, 44, 34, 76, 177, 30, 155, 54, 85, 138, 184, 158, 69, 137, 131, 99, 51, 90, 70, 127, 94, 67, 17, 199, 119, 198, 84, 68, 118, 174, 193, 95, 134, 141, 194]}
> Iteration 37
	BestSolution: {cost: -3512, size: 75, elements:[49, 31, 117, 72, 66, 198, 69, 171, 107, 172, 140, 7, 145, 61, 127, 110, 87, 184, 83, 80, 138, 34, 38, 101, 147, 174, 6, 51, 108, 95, 84, 196, 195, 11, 157, 155, 56, 85, 45, 77, 124, 88, 119, 162, 28, 67, 86, 4, 106, 193, 17, 53, 44, 99, 54, 21, 102, 16, 150, 90, 131, 63, 19, 137, 70, 179, 185, 81, 192, 48, 199, 68, 141, 121, 177]}
> Iteration 52
	BestSolution: {cost: -3517, size: 73, elements:[17, 9, 69, 84, 192, 49, 184, 31, 179, 110, 196, 157, 175, 7, 193, 185, 13, 0, 195, 34, 117, 61, 172, 90, 114, 141, 85, 56, 44, 111, 76, 100, 99, 165, 155, 118, 48, 67, 119, 171, 23, 174, 121, 92, 53, 151, 66, 166, 181, 16, 131, 127, 122, 11, 54, 12, 106, 70, 101, 162, 147, 167, 108, 152, 4, 81, 45, 43, 73, 37, 87, 154, 86]}
> Iteration 215
	BestSolution: {cost: -3545, size: 78, elements:[155, 151, 157, 171, 84, 31, 179, 69, 154, 193, 51, 189, 53, 72, 62, 90, 17, 172, 77, 92, 56, 6, 87, 11, 34, 163, 162, 119, 131, 185, 7, 66, 28, 167, 45, 67, 195, 150, 147, 117, 174, 138, 54, 25, 141, 38, 80, 130, 4, 196, 125, 145, 44, 184, 16, 83, 82, 23, 70, 101, 12, 85, 106, 110, 108, 165, 161, 175, 48, 127, 100, 61, 166, 134, 88, 49, 177, 194]}
> Iteration 231
	BestSolution: {cost: -3580, size: 77, elements:[83, 145, 167, 155, 171, 85, 72, 7, 110, 34, 51, 172, 31, 69, 184, 157, 138, 174, 17, 180, 80, 81, 66, 141, 11, 119, 162, 196, 87, 6, 195, 92, 77, 56, 179, 108, 4, 16, 82, 147, 117, 12, 84, 53, 130, 106, 148, 21, 73, 49, 23, 185, 25, 67, 90, 175, 61, 150, 70, 101, 198, 192, 45, 54, 165, 137, 193, 44, 68, 151, 129, 33, 9, 50, 134, 131, 120]}
> Iteration 559
	BestSolution: {cost: -3587, size: 77, elements:[92, 53, 117, 151, 69, 84, 35, 148, 66, 179, 171, 31, 162, 157, 49, 4, 110, 82, 196, 72, 6, 90, 184, 137, 28, 145, 67, 185, 155, 7, 121, 77, 46, 34, 70, 119, 172, 51, 16, 56, 107, 11, 80, 193, 99, 141, 147, 23, 54, 125, 25, 183, 177, 8, 195, 131, 108, 85, 166, 167, 140, 165, 174, 95, 45, 106, 111, 44, 134, 81, 175, 101, 63, 83, 138, 17, 100]}
> Iteration 712
	BestSolution: {cost: -3692, size: 74, elements:[49, 66, 184, 82, 17, 172, 31, 179, 157, 69, 7, 9, 141, 162, 145, 80, 72, 81, 183, 99, 84, 196, 23, 119, 56, 4, 171, 167, 166, 85, 86, 43, 34, 111, 155, 148, 70, 108, 195, 51, 117, 42, 181, 121, 127, 101, 110, 192, 124, 175, 90, 16, 165, 1, 21, 174, 44, 152, 106, 193, 131, 137, 147, 100, 103, 48, 134, 154, 125, 54, 11, 83, 87, 138]}
-----------------
instance: ../instances/kqbf/kqbf200
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 3692, size: 74, elements:[49, 66, 184, 82, 17, 172, 31, 179, 157, 69, 7, 9, 141, 162, 145, 80, 72, 81, 183, 99, 84, 196, 23, 119, 56, 4, 171, 167, 166, 85, 86, 43, 34, 111, 155, 148, 70, 108, 195, 51, 117, 42, 181, 121, 127, 101, 110, 192, 124, 175, 90, 16, 165, 1, 21, 174, 44, 152, 106, 193, 131, 137, 147, 100, 103, 48, 134, 154, 125, 54, 11, 83, 87, 138]}
Knapsack Weight of Best Solution: 679
RunningTime: 72.032 seconds


=============================
instance: ../instances/kqbf/kqbf200
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -3170, size: 71, elements:[193, 84, 192, 184, 15, 117, 141, 120, 114, 147, 94, 77, 157, 73, 88, 4, 58, 54, 13, 144, 179, 29, 127, 70, 68, 6, 90, 145, 44, 155, 21, 95, 131, 16, 51, 167, 139, 66, 129, 119, 48, 150, 87, 7, 34, 30, 107, 41, 177, 172, 138, 8, 25, 121, 39, 28, 136, 137, 83, 125, 45, 164, 56, 72, 103, 32, 49, 67, 110, 196, 17]}
> Iteration 2
	BestSolution: {cost: -3430, size: 74, elements:[49, 66, 187, 108, 35, 140, 76, 155, 121, 142, 72, 184, 92, 31, 110, 196, 198, 117, 55, 13, 193, 70, 138, 106, 195, 68, 175, 127, 154, 85, 125, 45, 145, 56, 4, 51, 7, 83, 157, 11, 95, 99, 172, 84, 54, 147, 80, 131, 134, 87, 137, 23, 141, 86, 174, 101, 158, 103, 94, 30, 69, 19, 34, 16, 67, 166, 167, 21, 179, 9, 17, 162, 119, 165]}
> Iteration 7
	BestSolution: {cost: -3455, size: 78, elements:[49, 172, 157, 17, 69, 31, 196, 184, 7, 92, 56, 82, 77, 84, 193, 179, 53, 90, 63, 148, 113, 72, 110, 89, 118, 141, 13, 198, 30, 114, 100, 66, 34, 85, 73, 45, 103, 83, 67, 166, 162, 61, 28, 126, 131, 87, 195, 6, 11, 134, 175, 117, 88, 161, 48, 93, 16, 119, 137, 138, 14, 4, 147, 163, 155, 68, 58, 80, 99, 106, 121, 101, 51, 25, 124, 194, 177, 54]}
> Iteration 15
	BestSolution: {cost: -3494, size: 73, elements:[17, 172, 95, 83, 85, 63, 65, 87, 174, 108, 88, 61, 101, 165, 49, 86, 110, 4, 19, 150, 45, 135, 147, 176, 192, 11, 145, 157, 184, 21, 103, 66, 34, 72, 80, 67, 31, 166, 119, 62, 152, 155, 132, 51, 84, 69, 115, 99, 196, 94, 106, 162, 137, 76, 183, 30, 127, 198, 179, 124, 193, 131, 121, 148, 141, 138, 81, 33, 9, 134, 195, 117, 23]}
> Iteration 39
	BestSolution: {cost: -3565, size: 77, elements:[49, 97, 31, 140, 196, 121, 19, 173, 61, 175, 171, 6, 4, 148, 152, 72, 110, 145, 157, 117, 155, 7, 58, 66, 80, 93, 53, 166, 99, 69, 119, 82, 85, 168, 195, 105, 162, 67, 10, 51, 132, 90, 100, 48, 34, 84, 161, 138, 115, 154, 137, 16, 147, 87, 151, 184, 185, 56, 81, 25, 77, 174, 172, 108, 124, 193, 101, 45, 11, 141, 21, 165, 63, 17, 30, 92, 83]}
> Iteration 86
	BestSolution: {cost: -3729, size: 76, elements:[17, 167, 83, 82, 145, 61, 51, 172, 104, 184, 66, 108, 138, 68, 141, 63, 101, 183, 157, 99, 147, 195, 166, 23, 137, 155, 67, 124, 121, 193, 110, 48, 4, 103, 85, 43, 54, 131, 69, 179, 21, 196, 100, 119, 192, 86, 81, 80, 49, 16, 34, 126, 25, 174, 106, 134, 70, 7, 116, 9, 113, 150, 84, 154, 31, 95, 162, 185, 11, 77, 165, 32, 30, 87, 56, 36]}
> Iteration 519
	BestSolution: {cost: -3734, size: 75, elements:[49, 172, 174, 108, 63, 157, 17, 31, 175, 68, 4, 61, 101, 138, 72, 83, 196, 16, 110, 80, 34, 103, 19, 155, 165, 145, 154, 99, 140, 66, 6, 45, 86, 85, 51, 137, 95, 54, 193, 141, 23, 147, 106, 44, 70, 185, 48, 9, 166, 56, 7, 134, 195, 11, 67, 167, 69, 125, 21, 119, 121, 150, 87, 148, 171, 162, 131, 37, 90, 100, 84, 117, 179, 81, 30]}
> Iteration 676
	BestSolution: {cost: -3753, size: 75, elements:[49, 4, 68, 157, 82, 84, 6, 31, 69, 184, 17, 117, 66, 53, 67, 145, 119, 125, 77, 150, 196, 106, 80, 155, 162, 179, 7, 23, 114, 134, 195, 34, 130, 171, 192, 33, 16, 11, 90, 147, 44, 137, 72, 73, 127, 167, 131, 30, 21, 13, 138, 83, 141, 86, 37, 61, 100, 51, 48, 54, 45, 87, 85, 118, 193, 81, 198, 101, 56, 160, 110, 172, 175, 121, 165]}
> Iteration 707
	BestSolution: {cost: -3766, size: 79, elements:[17, 69, 179, 53, 150, 84, 118, 162, 66, 61, 31, 171, 67, 49, 119, 155, 34, 90, 4, 77, 185, 85, 7, 165, 48, 157, 81, 111, 82, 11, 141, 72, 100, 80, 12, 174, 87, 16, 121, 172, 196, 56, 138, 184, 44, 99, 51, 147, 54, 83, 198, 6, 114, 145, 161, 30, 94, 117, 151, 195, 167, 21, 170, 45, 140, 106, 70, 73, 23, 33, 142, 175, 134, 177, 92, 131, 110, 193, 9]}
-----------------
instance: ../instances/kqbf/kqbf200
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 3766, size: 79, elements:[17, 69, 179, 53, 150, 84, 118, 162, 66, 61, 31, 171, 67, 49, 119, 155, 34, 90, 4, 77, 185, 85, 7, 165, 48, 157, 81, 111, 82, 11, 141, 72, 100, 80, 12, 174, 87, 16, 121, 172, 196, 56, 138, 184, 44, 99, 51, 147, 54, 83, 198, 6, 114, 145, 161, 30, 94, 117, 151, 195, 167, 21, 170, 45, 140, 106, 70, 73, 23, 33, 142, 175, 134, 177, 92, 131, 110, 193, 9]}
Knapsack Weight of Best Solution: 677
RunningTime: 95.059 seconds


=============================
instance: ../instances/kqbf/kqbf200
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -4, size: 2, elements:[128, 1]}
> Iteration 1
	BestSolution: {cost: -8, size: 2, elements:[98, 3]}
> Iteration 7
	BestSolution: {cost: -52, size: 6, elements:[92, 104, 184, 180, 195, 1]}
> Iteration 89
	BestSolution: {cost: -68, size: 8, elements:[67, 167, 104, 172, 165, 192, 142, 0]}
> Iteration 139
	BestSolution: {cost: -84, size: 11, elements:[58, 136, 191, 108, 1, 21, 102, 143, 128, 59, 0]}
> Iteration 618
	BestSolution: {cost: -117, size: 10, elements:[157, 17, 182, 69, 107, 139, 89, 63, 134, 0]}
> Iteration 839
	BestSolution: {cost: -179, size: 14, elements:[83, 143, 49, 60, 9, 154, 159, 1, 144, 178, 163, 188, 26, 2]}
-----------------
instance: ../instances/kqbf/kqbf200
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 179, size: 14, elements:[83, 143, 49, 60, 9, 154, 159, 1, 144, 178, 163, 188, 26, 2]}
Knapsack Weight of Best Solution: 115
RunningTime: 1.469 seconds


=============================
instance: ../instances/kqbf/kqbf200
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -3138, size: 64, elements:[44, 9, 165, 193, 94, 166, 174, 176, 101, 181, 99, 76, 66, 49, 108, 140, 95, 122, 127, 70, 121, 110, 155, 85, 51, 46, 158, 154, 187, 4, 148, 19, 171, 145, 23, 69, 111, 18, 86, 131, 80, 125, 54, 52, 143, 129, 7, 117, 160, 106, 45, 179, 30, 162, 167, 25, 141, 40, 153, 157, 134, 119, 11, 17]}
> Iteration 2
	BestSolution: {cost: -3704, size: 73, elements:[119, 49, 31, 89, 179, 157, 155, 196, 110, 69, 72, 145, 66, 80, 171, 7, 195, 53, 162, 34, 117, 84, 6, 28, 148, 4, 77, 11, 106, 67, 85, 70, 185, 90, 21, 138, 87, 150, 61, 17, 36, 19, 86, 192, 114, 88, 147, 141, 184, 137, 30, 193, 95, 16, 73, 45, 131, 198, 54, 25, 108, 51, 101, 174, 167, 83, 63, 166, 23, 56, 163, 134, 199]}
> Iteration 28
	BestSolution: {cost: -3731, size: 77, elements:[17, 36, 61, 104, 0, 192, 167, 21, 139, 138, 30, 68, 180, 24, 31, 179, 157, 116, 184, 170, 123, 113, 118, 7, 63, 126, 6, 169, 100, 56, 51, 81, 16, 54, 47, 69, 185, 108, 174, 161, 12, 141, 32, 67, 53, 34, 25, 4, 11, 162, 85, 77, 84, 87, 148, 82, 106, 160, 124, 101, 50, 1, 119, 48, 99, 114, 172, 90, 70, 145, 196, 155, 29, 147, 117, 165, 49]}
> Iteration 227
	BestSolution: {cost: -3768, size: 76, elements:[53, 172, 198, 17, 193, 66, 184, 77, 82, 84, 92, 196, 69, 113, 56, 157, 195, 31, 72, 103, 34, 13, 117, 49, 175, 110, 7, 179, 90, 148, 171, 85, 100, 155, 6, 4, 11, 44, 48, 16, 73, 134, 114, 99, 119, 118, 162, 81, 141, 192, 23, 147, 67, 167, 145, 54, 30, 137, 106, 101, 61, 51, 21, 86, 131, 87, 138, 83, 45, 80, 33, 174, 165, 9, 121, 177]}
> Iteration 250
	BestSolution: {cost: -3792, size: 75, elements:[155, 195, 179, 162, 67, 53, 150, 66, 151, 84, 157, 69, 17, 31, 119, 34, 171, 11, 6, 4, 117, 90, 77, 16, 12, 72, 73, 80, 7, 49, 185, 82, 81, 184, 147, 48, 56, 100, 196, 44, 106, 85, 87, 130, 125, 114, 141, 193, 192, 54, 174, 61, 145, 45, 138, 172, 51, 21, 70, 167, 131, 25, 108, 23, 137, 121, 68, 13, 30, 126, 110, 83, 101, 175, 165]}
> Iteration 441
	BestSolution: {cost: -3806, size: 78, elements:[17, 180, 35, 172, 31, 157, 138, 196, 72, 92, 29, 69, 77, 53, 56, 175, 140, 148, 6, 16, 30, 51, 123, 171, 47, 7, 155, 177, 189, 165, 34, 44, 90, 100, 84, 185, 129, 111, 48, 85, 87, 181, 11, 81, 119, 12, 179, 118, 117, 54, 4, 50, 162, 167, 141, 25, 108, 1, 174, 70, 8, 106, 67, 21, 101, 23, 68, 147, 154, 160, 134, 99, 114, 192, 131, 9, 32, 49]}
-----------------
instance: ../instances/kqbf/kqbf200
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 3806, size: 78, elements:[17, 180, 35, 172, 31, 157, 138, 196, 72, 92, 29, 69, 77, 53, 56, 175, 140, 148, 6, 16, 30, 51, 123, 171, 47, 7, 155, 177, 189, 165, 34, 44, 90, 100, 84, 185, 129, 111, 48, 85, 87, 181, 11, 81, 119, 12, 179, 118, 117, 54, 4, 50, 162, 167, 141, 25, 108, 1, 174, 70, 8, 106, 67, 21, 101, 23, 68, 147, 154, 160, 134, 99, 114, 192, 131, 9, 32, 49]}
Knapsack Weight of Best Solution: 679
RunningTime: 1399.603 seconds


=============================
instance: ../instances/kqbf/kqbf200
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 6
	BestSolution: {cost: -2, size: 2, elements:[105, 3]}
-----------------
instance: ../instances/kqbf/kqbf200
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 2, size: 2, elements:[105, 3]}
Knapsack Weight of Best Solution: 12
RunningTime: 0.894 seconds


=============================
instance: ../instances/kqbf/kqbf200
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -3390, size: 69, elements:[4, 6, 117, 21, 68, 145, 19, 155, 31, 58, 73, 16, 30, 160, 114, 125, 51, 54, 169, 106, 147, 42, 154, 192, 95, 48, 137, 157, 86, 150, 179, 141, 81, 162, 119, 23, 11, 84, 67, 17, 167, 1, 69, 53, 108, 195, 33, 171, 34, 185, 174, 101, 49, 66, 61, 138, 99, 85, 12, 87, 80, 83, 45, 124, 7, 127, 70, 90, 131]}
> Iteration 1
	BestSolution: {cost: -3704, size: 73, elements:[119, 49, 31, 89, 179, 157, 155, 196, 110, 69, 72, 145, 66, 80, 171, 7, 195, 53, 162, 34, 117, 84, 6, 28, 148, 4, 77, 11, 106, 67, 85, 70, 185, 90, 21, 138, 87, 150, 61, 17, 36, 19, 86, 192, 114, 88, 147, 141, 184, 137, 30, 193, 95, 16, 73, 45, 131, 198, 54, 25, 108, 51, 101, 174, 167, 83, 63, 166, 23, 56, 163, 134, 199]}
-----------------
instance: ../instances/kqbf/kqbf200
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 3704, size: 73, elements:[119, 49, 31, 89, 179, 157, 155, 196, 110, 69, 72, 145, 66, 80, 171, 7, 195, 53, 162, 34, 117, 84, 6, 28, 148, 4, 77, 11, 106, 67, 85, 70, 185, 90, 21, 138, 87, 150, 61, 17, 36, 19, 86, 192, 114, 88, 147, 141, 184, 137, 30, 193, 95, 16, 73, 45, 131, 198, 54, 25, 108, 51, 101, 174, 167, 83, 63, 166, 23, 56, 163, 134, 199]}
Knapsack Weight of Best Solution: 679
RunningTime: 1467.036 seconds


=============================
instance: ../instances/kqbf/kqbf200
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -24, size: 4, elements:[31, 184, 183, 0]}
> Iteration 1
	BestSolution: {cost: -34, size: 5, elements:[47, 9, 15, 32, 1]}
> Iteration 3
	BestSolution: {cost: -527, size: 30, elements:[172, 81, 183, 94, 104, 80, 82, 66, 71, 99, 46, 101, 114, 138, 174, 19, 69, 139, 127, 188, 62, 137, 141, 180, 17, 132, 182, 177, 33, 0]}
> Iteration 5
	BestSolution: {cost: -872, size: 38, elements:[41, 68, 106, 3, 125, 169, 80, 21, 16, 167, 25, 51, 6, 112, 58, 70, 108, 184, 71, 72, 52, 168, 138, 129, 148, 33, 174, 54, 65, 179, 176, 39, 153, 2, 28, 50, 134, 1]}
> Iteration 11
	BestSolution: {cost: -880, size: 40, elements:[159, 151, 28, 103, 69, 35, 67, 107, 130, 34, 15, 42, 77, 114, 21, 119, 5, 87, 62, 117, 185, 6, 136, 184, 193, 182, 16, 56, 79, 153, 172, 133, 128, 108, 164, 12, 23, 17, 72, 1]}
> Iteration 16
	BestSolution: {cost: -1192, size: 48, elements:[68, 133, 12, 61, 84, 47, 63, 111, 151, 108, 52, 155, 124, 80, 197, 29, 19, 130, 91, 174, 11, 104, 159, 126, 58, 30, 171, 34, 51, 164, 183, 119, 85, 21, 150, 118, 10, 115, 179, 83, 131, 53, 74, 89, 45, 73, 161, 3]}
> Iteration 33
	BestSolution: {cost: -1547, size: 58, elements:[154, 129, 18, 157, 186, 144, 23, 104, 80, 125, 151, 187, 10, 89, 133, 107, 59, 54, 39, 4, 53, 145, 51, 72, 99, 95, 30, 117, 193, 7, 119, 167, 159, 52, 40, 171, 111, 131, 28, 34, 68, 180, 16, 9, 127, 46, 32, 13, 188, 73, 190, 176, 102, 61, 139, 84, 96, 3]}
> Iteration 68
	BestSolution: {cost: -2107, size: 72, elements:[4, 11, 101, 86, 82, 76, 154, 103, 84, 158, 19, 78, 50, 49, 83, 46, 23, 10, 63, 198, 160, 5, 129, 100, 68, 163, 99, 175, 133, 18, 140, 77, 80, 51, 17, 104, 122, 191, 105, 143, 118, 7, 3, 134, 15, 111, 54, 177, 108, 139, 113, 92, 81, 73, 131, 44, 174, 119, 132, 148, 75, 121, 117, 72, 110, 47, 171, 120, 196, 187, 64, 155]}
> Iteration 95
	BestSolution: {cost: -2575, size: 70, elements:[141, 21, 30, 147, 23, 164, 101, 150, 73, 95, 9, 153, 134, 61, 66, 158, 4, 67, 71, 167, 174, 192, 85, 25, 58, 160, 49, 54, 193, 143, 16, 126, 80, 154, 131, 102, 83, 162, 166, 88, 114, 185, 13, 12, 124, 103, 86, 176, 32, 69, 110, 72, 144, 87, 97, 122, 52, 137, 184, 51, 77, 106, 76, 7, 155, 199, 20, 17, 119, 138]}
> Iteration 662
	BestSolution: {cost: -2672, size: 74, elements:[87, 141, 172, 66, 23, 150, 130, 82, 167, 84, 83, 121, 134, 15, 183, 108, 174, 95, 10, 22, 45, 196, 170, 198, 193, 35, 67, 54, 11, 7, 133, 81, 179, 70, 51, 151, 53, 100, 62, 56, 72, 155, 104, 34, 99, 69, 153, 138, 101, 147, 48, 166, 145, 17, 12, 131, 184, 21, 157, 124, 80, 176, 25, 161, 107, 110, 63, 115, 117, 9, 195, 49, 119, 194]}
-----------------
instance: ../instances/kqbf/kqbf200
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 2672, size: 74, elements:[87, 141, 172, 66, 23, 150, 130, 82, 167, 84, 83, 121, 134, 15, 183, 108, 174, 95, 10, 22, 45, 196, 170, 198, 193, 35, 67, 54, 11, 7, 133, 81, 179, 70, 51, 151, 53, 100, 62, 56, 72, 155, 104, 34, 99, 69, 153, 138, 101, 147, 48, 166, 145, 17, 12, 131, 184, 21, 157, 124, 80, 176, 25, 161, 107, 110, 63, 115, 117, 9, 195, 49, 119, 194]}
Knapsack Weight of Best Solution: 669
RunningTime: 11.366 seconds


=============================
instance: ../instances/kqbf/kqbf200
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -3441, size: 73, elements:[95, 19, 46, 66, 18, 113, 31, 116, 77, 158, 173, 36, 170, 179, 49, 114, 110, 30, 140, 148, 92, 162, 32, 72, 155, 196, 6, 126, 184, 7, 121, 123, 60, 69, 4, 82, 85, 157, 145, 141, 70, 67, 167, 169, 166, 23, 125, 5, 63, 108, 17, 56, 124, 147, 103, 174, 54, 51, 99, 94, 21, 101, 172, 11, 87, 34, 83, 138, 43, 106, 119, 195, 199]}
> Iteration 1
	BestSolution: {cost: -3476, size: 70, elements:[49, 154, 117, 129, 196, 54, 70, 174, 92, 1, 50, 84, 101, 4, 108, 106, 175, 148, 110, 192, 69, 23, 29, 157, 72, 155, 100, 31, 80, 145, 7, 134, 68, 16, 9, 21, 17, 86, 167, 179, 162, 81, 119, 51, 165, 104, 127, 131, 171, 85, 25, 30, 118, 133, 52, 160, 180, 181, 125, 150, 76, 176, 12, 164, 63, 83, 95, 166, 147, 138]}
> Iteration 2
	BestSolution: {cost: -3627, size: 73, elements:[17, 92, 87, 196, 101, 82, 47, 69, 84, 184, 198, 31, 49, 157, 138, 61, 83, 172, 13, 175, 34, 110, 72, 85, 195, 56, 7, 171, 90, 117, 193, 77, 38, 44, 53, 66, 140, 6, 145, 93, 155, 173, 147, 48, 16, 4, 73, 68, 80, 137, 134, 30, 114, 45, 37, 106, 119, 162, 11, 67, 54, 141, 167, 23, 99, 51, 25, 108, 166, 43, 148, 21, 177]}
> Iteration 11
	BestSolution: {cost: -3640, size: 75, elements:[49, 43, 1, 15, 138, 121, 111, 122, 127, 106, 175, 94, 155, 5, 8, 114, 177, 196, 86, 70, 31, 57, 174, 136, 181, 17, 119, 99, 157, 172, 26, 184, 23, 141, 67, 13, 48, 154, 125, 195, 192, 69, 85, 7, 166, 44, 165, 56, 51, 117, 179, 34, 84, 54, 167, 108, 147, 193, 90, 185, 16, 37, 4, 81, 171, 101, 42, 21, 6, 145, 95, 11, 87, 140, 83]}
> Iteration 19
	BestSolution: {cost: -3662, size: 76, elements:[49, 157, 132, 171, 35, 10, 105, 179, 31, 155, 84, 162, 66, 148, 11, 140, 72, 53, 30, 69, 16, 4, 77, 82, 6, 51, 119, 150, 81, 28, 34, 7, 185, 144, 21, 47, 67, 151, 100, 56, 165, 147, 196, 117, 90, 87, 85, 92, 17, 114, 174, 172, 138, 12, 161, 141, 45, 108, 175, 106, 54, 70, 80, 152, 29, 23, 153, 8, 99, 177, 125, 160, 189, 154, 101, 88]}
> Iteration 40
	BestSolution: {cost: -3710, size: 75, elements:[17, 157, 95, 119, 49, 89, 110, 32, 86, 30, 37, 88, 114, 101, 19, 43, 34, 54, 4, 162, 158, 83, 85, 166, 61, 141, 174, 147, 63, 165, 94, 67, 45, 23, 108, 155, 145, 167, 25, 51, 52, 21, 80, 87, 66, 137, 138, 93, 121, 184, 106, 11, 179, 70, 7, 84, 148, 28, 124, 183, 99, 69, 198, 81, 131, 193, 90, 111, 172, 72, 195, 117, 196, 77, 8]}
> Iteration 107
	BestSolution: {cost: -3726, size: 74, elements:[155, 80, 119, 87, 134, 66, 69, 84, 162, 31, 77, 145, 6, 7, 171, 127, 49, 117, 72, 179, 157, 196, 172, 131, 107, 110, 148, 28, 53, 4, 34, 11, 16, 25, 90, 85, 193, 70, 106, 44, 95, 184, 138, 99, 161, 51, 56, 21, 195, 151, 174, 147, 67, 45, 198, 94, 54, 141, 30, 114, 17, 86, 163, 111, 125, 165, 166, 167, 37, 23, 101, 137, 48, 83]}
> Iteration 123
	BestSolution: {cost: -3728, size: 75, elements:[49, 93, 115, 6, 172, 147, 17, 140, 101, 26, 174, 173, 67, 196, 138, 157, 99, 119, 166, 69, 31, 43, 66, 184, 195, 44, 61, 170, 198, 48, 63, 90, 82, 83, 23, 34, 33, 87, 145, 155, 7, 167, 171, 38, 72, 80, 85, 108, 124, 45, 110, 121, 4, 137, 19, 106, 86, 37, 141, 162, 81, 16, 132, 175, 30, 148, 92, 56, 117, 54, 21, 51, 11, 100, 165]}
> Iteration 144
	BestSolution: {cost: -3751, size: 77, elements:[17, 70, 125, 72, 82, 163, 94, 155, 162, 167, 136, 131, 86, 7, 177, 56, 154, 28, 134, 80, 5, 195, 85, 83, 51, 23, 145, 119, 81, 150, 157, 77, 196, 4, 16, 147, 114, 45, 6, 87, 172, 21, 11, 34, 110, 171, 69, 184, 84, 92, 31, 138, 117, 192, 54, 179, 88, 49, 174, 101, 185, 141, 66, 108, 193, 165, 9, 1, 25, 129, 44, 106, 175, 8, 30, 90, 121]}
> Iteration 223
	BestSolution: {cost: -3794, size: 74, elements:[155, 117, 145, 77, 67, 119, 121, 4, 6, 19, 94, 21, 87, 31, 61, 150, 84, 49, 127, 162, 114, 192, 69, 179, 66, 141, 90, 34, 184, 7, 171, 85, 17, 11, 88, 174, 157, 131, 80, 110, 70, 54, 193, 95, 147, 106, 44, 45, 196, 172, 138, 101, 86, 137, 108, 72, 51, 198, 83, 195, 99, 23, 167, 166, 165, 56, 37, 111, 16, 163, 48, 81, 185, 177]}
> Iteration 572
	BestSolution: {cost: -3840, size: 74, elements:[155, 94, 95, 67, 23, 66, 196, 166, 49, 119, 99, 19, 111, 121, 43, 165, 17, 114, 69, 85, 174, 34, 108, 141, 167, 145, 70, 179, 54, 4, 157, 193, 110, 45, 80, 147, 61, 63, 86, 37, 137, 106, 101, 162, 84, 192, 184, 44, 90, 48, 7, 131, 87, 172, 81, 117, 127, 76, 31, 171, 195, 83, 198, 138, 51, 72, 11, 56, 88, 21, 16, 175, 6, 163]}
-----------------
instance: ../instances/kqbf/kqbf200
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 3840, size: 74, elements:[155, 94, 95, 67, 23, 66, 196, 166, 49, 119, 99, 19, 111, 121, 43, 165, 17, 114, 69, 85, 174, 34, 108, 141, 167, 145, 70, 179, 54, 4, 157, 193, 110, 45, 80, 147, 61, 63, 86, 37, 137, 106, 101, 162, 84, 192, 184, 44, 90, 48, 7, 131, 87, 172, 81, 117, 127, 76, 31, 171, 195, 83, 198, 138, 51, 72, 11, 56, 88, 21, 16, 175, 6, 163]}
Knapsack Weight of Best Solution: 678
RunningTime: 1214.434 seconds


=============================
instance: ../instances/kqbf/kqbf200
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 1
	BestSolution: {cost: -38, size: 4, elements:[6, 63, 186, 4]}
> Iteration 100
	BestSolution: {cost: -40, size: 7, elements:[159, 138, 184, 117, 116, 97, 1]}
> Iteration 108
	BestSolution: {cost: -57, size: 6, elements:[54, 86, 4, 42, 140, 3]}
> Iteration 238
	BestSolution: {cost: -73, size: 9, elements:[51, 97, 187, 84, 193, 17, 189, 59, 0]}
> Iteration 256
	BestSolution: {cost: -78, size: 9, elements:[136, 6, 58, 199, 89, 20, 154, 181, 1]}
> Iteration 617
	BestSolution: {cost: -145, size: 11, elements:[165, 171, 121, 66, 53, 5, 151, 182, 89, 39, 2]}
-----------------
instance: ../instances/kqbf/kqbf200
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 145, size: 11, elements:[165, 171, 121, 66, 53, 5, 151, 182, 89, 39, 2]}
Knapsack Weight of Best Solution: 90
RunningTime: 1.473 seconds


=============================
instance: ../instances/kqbf/kqbf200
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -3390, size: 69, elements:[4, 6, 117, 21, 68, 145, 19, 155, 31, 58, 73, 16, 30, 160, 114, 125, 51, 54, 169, 106, 147, 42, 154, 192, 95, 48, 137, 157, 86, 150, 179, 141, 81, 162, 119, 23, 11, 84, 67, 17, 167, 1, 69, 53, 108, 195, 33, 171, 34, 185, 174, 101, 49, 66, 61, 138, 99, 85, 12, 87, 80, 83, 45, 124, 7, 127, 70, 90, 131]}
> Iteration 1
	BestSolution: {cost: -3704, size: 73, elements:[119, 49, 31, 89, 179, 157, 155, 196, 110, 69, 72, 145, 66, 80, 171, 7, 195, 53, 162, 34, 117, 84, 6, 28, 148, 4, 77, 11, 106, 67, 85, 70, 185, 90, 21, 138, 87, 150, 61, 17, 36, 19, 86, 192, 114, 88, 147, 141, 184, 137, 30, 193, 95, 16, 73, 45, 131, 198, 54, 25, 108, 51, 101, 174, 167, 83, 63, 166, 23, 56, 163, 134, 199]}
> Iteration 73
	BestSolution: {cost: -3712, size: 73, elements:[155, 21, 42, 31, 66, 171, 195, 69, 179, 117, 145, 110, 34, 72, 172, 7, 80, 131, 9, 16, 49, 86, 162, 101, 83, 23, 4, 192, 127, 157, 44, 196, 184, 147, 167, 43, 37, 119, 81, 165, 111, 183, 166, 82, 51, 99, 56, 85, 141, 193, 54, 94, 114, 17, 48, 121, 70, 174, 95, 106, 84, 68, 137, 90, 87, 181, 108, 185, 138, 61, 67, 154, 20]}
> Iteration 183
	BestSolution: {cost: -3752, size: 76, elements:[87, 6, 117, 114, 7, 172, 21, 56, 77, 36, 31, 184, 34, 107, 66, 72, 145, 69, 162, 49, 28, 148, 179, 196, 157, 84, 119, 138, 92, 13, 53, 90, 67, 32, 141, 30, 161, 85, 4, 82, 185, 25, 193, 106, 171, 16, 147, 51, 155, 167, 11, 140, 54, 174, 12, 108, 45, 70, 126, 151, 95, 110, 101, 61, 137, 124, 121, 100, 175, 81, 23, 99, 80, 17, 170, 63]}
> Iteration 311
	BestSolution: {cost: -3780, size: 77, elements:[17, 119, 189, 53, 150, 84, 157, 155, 179, 31, 162, 69, 66, 171, 80, 130, 82, 49, 23, 67, 4, 125, 28, 6, 196, 72, 145, 77, 7, 148, 106, 11, 134, 184, 34, 56, 117, 195, 110, 16, 147, 92, 163, 114, 51, 175, 45, 172, 81, 86, 85, 87, 83, 160, 154, 101, 108, 167, 185, 138, 36, 21, 192, 131, 54, 193, 141, 25, 30, 198, 73, 129, 61, 90, 165, 95, 177]}
> Iteration 621
	BestSolution: {cost: -3787, size: 76, elements:[155, 116, 87, 140, 31, 66, 138, 108, 35, 185, 141, 84, 189, 92, 53, 34, 171, 137, 90, 179, 184, 167, 72, 148, 69, 157, 162, 30, 56, 7, 85, 82, 100, 17, 81, 198, 51, 54, 11, 12, 16, 4, 106, 86, 175, 101, 23, 67, 196, 49, 117, 6, 119, 147, 44, 48, 99, 145, 70, 80, 174, 21, 172, 95, 63, 45, 134, 83, 77, 150, 33, 124, 118, 131, 165, 110]}
> Iteration 703
	BestSolution: {cost: -3873, size: 75, elements:[49, 127, 184, 31, 13, 92, 117, 84, 69, 90, 179, 7, 72, 172, 196, 56, 157, 195, 111, 17, 34, 175, 171, 110, 85, 148, 70, 43, 114, 81, 1, 121, 100, 113, 181, 87, 174, 170, 126, 6, 4, 21, 106, 155, 119, 26, 99, 23, 66, 11, 67, 145, 167, 51, 108, 138, 141, 12, 123, 101, 61, 54, 124, 30, 137, 162, 16, 147, 140, 48, 118, 53, 32, 68, 44]}
-----------------
instance: ../instances/kqbf/kqbf200
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 3873, size: 75, elements:[49, 127, 184, 31, 13, 92, 117, 84, 69, 90, 179, 7, 72, 172, 196, 56, 157, 195, 111, 17, 34, 175, 171, 110, 85, 148, 70, 43, 114, 81, 1, 121, 100, 113, 181, 87, 174, 170, 126, 6, 4, 21, 106, 155, 119, 26, 99, 23, 66, 11, 67, 145, 167, 51, 108, 138, 141, 12, 123, 101, 61, 54, 124, 30, 137, 162, 16, 147, 140, 48, 118, 53, 32, 68, 44]}
Knapsack Weight of Best Solution: 679
RunningTime: 1363.043 seconds


=============================
instance: ../instances/kqbf/kqbf200
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 2
	BestSolution: {cost: -2, size: 2, elements:[105, 3]}
-----------------
instance: ../instances/kqbf/kqbf200
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 2, size: 2, elements:[105, 3]}
Knapsack Weight of Best Solution: 12
RunningTime: 0.882 seconds


=============================
instance: ../instances/kqbf/kqbf200
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -3390, size: 69, elements:[4, 6, 117, 21, 68, 145, 19, 155, 31, 58, 73, 16, 30, 160, 114, 125, 51, 54, 169, 106, 147, 42, 154, 192, 95, 48, 137, 157, 86, 150, 179, 141, 81, 162, 119, 23, 11, 84, 67, 17, 167, 1, 69, 53, 108, 195, 33, 171, 34, 185, 174, 101, 49, 66, 61, 138, 99, 85, 12, 87, 80, 83, 45, 124, 7, 127, 70, 90, 131]}
> Iteration 1
	BestSolution: {cost: -3704, size: 73, elements:[119, 49, 31, 89, 179, 157, 155, 196, 110, 69, 72, 145, 66, 80, 171, 7, 195, 53, 162, 34, 117, 84, 6, 28, 148, 4, 77, 11, 106, 67, 85, 70, 185, 90, 21, 138, 87, 150, 61, 17, 36, 19, 86, 192, 114, 88, 147, 141, 184, 137, 30, 193, 95, 16, 73, 45, 131, 198, 54, 25, 108, 51, 101, 174, 167, 83, 63, 166, 23, 56, 163, 134, 199]}
-----------------
instance: ../instances/kqbf/kqbf200
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 3704, size: 73, elements:[119, 49, 31, 89, 179, 157, 155, 196, 110, 69, 72, 145, 66, 80, 171, 7, 195, 53, 162, 34, 117, 84, 6, 28, 148, 4, 77, 11, 106, 67, 85, 70, 185, 90, 21, 138, 87, 150, 61, 17, 36, 19, 86, 192, 114, 88, 147, 141, 184, 137, 30, 193, 95, 16, 73, 45, 131, 198, 54, 25, 108, 51, 101, 174, 167, 83, 63, 166, 23, 56, 163, 134, 199]}
Knapsack Weight of Best Solution: 679
RunningTime: 1483.089 seconds


=============================
instance: ../instances/kqbf/kqbf400
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -8001, size: 135, elements:[150, 332, 331, 328, 180, 143, 245, 324, 76, 252, 139, 274, 182, 50, 235, 146, 125, 169, 384, 213, 224, 99, 192, 289, 154, 16, 347, 286, 101, 349, 291, 51, 181, 285, 128, 114, 69, 279, 385, 226, 327, 127, 372, 131, 376, 166, 251, 21, 42, 352, 268, 155, 23, 103, 293, 335, 70, 340, 294, 9, 134, 49, 208, 5, 253, 370, 1, 4, 86, 306, 126, 80, 387, 261, 175, 196, 361, 74, 375, 108, 236, 200, 177, 383, 309, 18, 326, 350, 129, 360, 373, 225, 380, 368, 163, 303, 72, 377, 206, 54, 17, 393, 137, 47, 263, 320, 250, 7, 73, 211, 28, 247, 222, 193, 277, 157, 312, 66, 195, 136, 43, 262, 158, 94, 325, 228, 187, 82, 339, 290, 119, 269, 260, 120, 234]}
> Iteration 1
	BestSolution: {cost: -8972, size: 137, elements:[328, 61, 316, 284, 19, 121, 111, 100, 17, 300, 98, 3, 299, 303, 381, 196, 177, 155, 114, 201, 0, 119, 312, 85, 246, 48, 29, 67, 399, 94, 165, 325, 293, 1, 382, 64, 327, 124, 369, 187, 211, 159, 41, 99, 340, 227, 145, 373, 359, 247, 70, 125, 245, 333, 80, 52, 241, 335, 393, 104, 257, 288, 183, 174, 20, 150, 372, 154, 354, 91, 237, 224, 25, 57, 366, 166, 236, 357, 286, 162, 28, 10, 69, 322, 50, 43, 239, 190, 332, 278, 368, 4, 291, 16, 375, 398, 53, 49, 30, 307, 355, 231, 238, 95, 47, 136, 171, 342, 143, 158, 253, 387, 323, 263, 226, 110, 259, 317, 18, 101, 153, 82, 275, 296, 304, 23, 336, 24, 258, 339, 277, 9, 265, 370, 83, 260, 138]}
> Iteration 7
	BestSolution: {cost: -9725, size: 148, elements:[260, 230, 389, 206, 60, 373, 235, 332, 97, 120, 273, 184, 285, 15, 243, 382, 75, 92, 249, 77, 377, 66, 177, 240, 288, 103, 168, 354, 108, 6, 17, 5, 386, 113, 366, 159, 125, 67, 314, 269, 397, 172, 265, 352, 305, 114, 211, 276, 312, 94, 395, 304, 10, 254, 101, 317, 327, 158, 136, 157, 378, 30, 16, 233, 156, 277, 93, 49, 289, 301, 105, 18, 119, 367, 87, 99, 95, 236, 170, 110, 323, 320, 247, 299, 83, 306, 154, 196, 8, 32, 69, 134, 316, 25, 183, 201, 387, 215, 148, 307, 229, 84, 342, 296, 258, 228, 349, 28, 138, 244, 44, 328, 166, 100, 140, 82, 147, 1, 336, 263, 324, 70, 80, 293, 286, 85, 174, 54, 56, 357, 3, 290, 51, 383, 362, 208, 165, 53, 368, 7, 318, 339, 155, 121, 234, 193, 11, 264]}
> Iteration 481
	BestSolution: {cost: -9756, size: 144, elements:[49, 184, 235, 172, 103, 383, 266, 332, 206, 13, 265, 83, 158, 92, 17, 31, 170, 272, 389, 296, 110, 175, 354, 125, 273, 288, 228, 347, 215, 283, 251, 157, 56, 306, 146, 196, 349, 65, 30, 43, 227, 236, 311, 371, 244, 216, 177, 51, 195, 323, 312, 166, 16, 89, 115, 190, 304, 137, 377, 230, 101, 368, 208, 319, 97, 247, 6, 87, 289, 348, 148, 63, 114, 94, 5, 32, 121, 352, 366, 124, 249, 387, 15, 155, 317, 260, 237, 250, 233, 154, 378, 107, 95, 76, 25, 274, 229, 85, 1, 72, 147, 21, 285, 88, 309, 381, 132, 240, 290, 108, 38, 211, 70, 329, 18, 10, 174, 397, 159, 299, 93, 189, 11, 327, 375, 80, 205, 99, 259, 239, 320, 183, 69, 7, 133, 145, 209, 20, 264, 328, 325, 253, 234, 119]}
-----------------
instance: ../instances/kqbf/kqbf400
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 9756, size: 144, elements:[49, 184, 235, 172, 103, 383, 266, 332, 206, 13, 265, 83, 158, 92, 17, 31, 170, 272, 389, 296, 110, 175, 354, 125, 273, 288, 228, 347, 215, 283, 251, 157, 56, 306, 146, 196, 349, 65, 30, 43, 227, 236, 311, 371, 244, 216, 177, 51, 195, 323, 312, 166, 16, 89, 115, 190, 304, 137, 377, 230, 101, 368, 208, 319, 97, 247, 6, 87, 289, 348, 148, 63, 114, 94, 5, 32, 121, 352, 366, 124, 249, 387, 15, 155, 317, 260, 237, 250, 233, 154, 378, 107, 95, 76, 25, 274, 229, 85, 1, 72, 147, 21, 285, 88, 309, 381, 132, 240, 290, 108, 38, 211, 70, 329, 18, 10, 174, 397, 159, 299, 93, 189, 11, 327, 375, 80, 205, 99, 259, 239, 320, 183, 69, 7, 133, 145, 209, 20, 264, 328, 325, 253, 234, 119]}
Knapsack Weight of Best Solution: 1342
RunningTime: 650.589 seconds


=============================
instance: ../instances/kqbf/kqbf400
alpha: 0.2
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -8621, size: 134, elements:[342, 95, 328, 193, 143, 87, 25, 108, 166, 61, 54, 147, 160, 30, 103, 259, 63, 174, 4, 291, 19, 381, 124, 257, 52, 97, 164, 393, 145, 340, 247, 176, 9, 192, 327, 345, 158, 85, 155, 162, 58, 360, 211, 91, 125, 83, 246, 359, 48, 1, 236, 227, 354, 16, 165, 153, 101, 100, 288, 18, 181, 332, 172, 301, 80, 110, 228, 383, 285, 21, 325, 152, 389, 159, 312, 131, 170, 215, 368, 10, 363, 296, 299, 306, 56, 167, 121, 205, 386, 81, 104, 304, 183, 17, 323, 391, 114, 119, 366, 293, 245, 352, 235, 70, 336, 12, 350, 23, 317, 209, 379, 208, 398, 307, 318, 28, 7, 357, 171, 378, 129, 123, 271, 200, 141, 20, 387, 179, 5, 157, 69, 49, 397, 339]}
> Iteration 1
	BestSolution: {cost: -9698, size: 147, elements:[260, 389, 168, 15, 104, 254, 248, 314, 211, 97, 235, 373, 18, 192, 391, 92, 289, 226, 273, 84, 352, 184, 285, 101, 154, 83, 304, 230, 253, 380, 385, 117, 77, 69, 16, 49, 193, 35, 108, 386, 296, 56, 288, 23, 144, 125, 196, 182, 157, 244, 214, 236, 114, 208, 377, 387, 1, 306, 251, 378, 315, 76, 366, 147, 174, 11, 155, 329, 95, 165, 32, 10, 96, 54, 290, 51, 327, 297, 212, 146, 5, 224, 107, 328, 250, 398, 65, 179, 177, 7, 136, 347, 151, 301, 70, 300, 319, 215, 356, 121, 158, 368, 110, 325, 245, 265, 201, 342, 28, 172, 94, 80, 323, 160, 331, 232, 307, 293, 381, 281, 332, 148, 17, 263, 124, 162, 85, 371, 62, 274, 240, 220, 216, 195, 25, 119, 159, 259, 317, 21, 9, 206, 269, 397, 312, 286, 3]}
> Iteration 25
	BestSolution: {cost: -9937, size: 153, elements:[17, 260, 332, 5, 262, 326, 182, 389, 221, 347, 184, 233, 251, 114, 224, 27, 76, 154, 266, 99, 177, 331, 218, 208, 306, 254, 377, 30, 103, 92, 289, 397, 352, 31, 75, 16, 237, 319, 187, 69, 146, 196, 299, 323, 285, 288, 240, 216, 375, 97, 132, 63, 312, 174, 273, 357, 49, 230, 56, 157, 387, 365, 349, 290, 304, 215, 348, 364, 274, 189, 354, 124, 53, 134, 101, 346, 137, 45, 38, 384, 113, 265, 371, 172, 388, 165, 32, 383, 175, 0, 166, 327, 24, 320, 93, 147, 307, 291, 195, 108, 181, 211, 125, 381, 110, 83, 51, 227, 228, 18, 155, 244, 272, 158, 204, 311, 140, 131, 338, 72, 250, 368, 336, 324, 85, 80, 88, 163, 328, 10, 190, 145, 263, 22, 9, 2, 183, 309, 4, 149, 170, 296, 281, 121, 276, 234, 317, 264, 223, 236, 286, 81, 269]}
> Iteration 498
	BestSolution: {cost: -9978, size: 155, elements:[17, 227, 375, 150, 362, 21, 131, 352, 347, 88, 199, 103, 157, 338, 195, 312, 251, 192, 260, 19, 6, 184, 73, 61, 123, 7, 320, 65, 290, 120, 58, 324, 365, 266, 38, 272, 63, 332, 149, 83, 166, 144, 4, 125, 72, 288, 147, 366, 176, 284, 314, 215, 383, 389, 31, 56, 303, 177, 190, 274, 328, 49, 16, 154, 77, 291, 357, 298, 216, 349, 30, 175, 114, 158, 224, 51, 101, 229, 327, 306, 354, 250, 172, 5, 194, 126, 134, 235, 137, 76, 99, 228, 273, 323, 97, 163, 218, 124, 200, 11, 371, 237, 45, 135, 325, 155, 92, 363, 230, 132, 10, 283, 208, 289, 196, 87, 47, 148, 265, 93, 299, 80, 110, 25, 336, 18, 384, 387, 348, 20, 286, 311, 253, 89, 121, 129, 244, 326, 236, 259, 385, 285, 307, 377, 388, 276, 317, 234, 223, 269, 397, 212, 24, 146, 351]}
> Iteration 966
	BestSolution: {cost: -10213, size: 153, elements:[49, 316, 347, 277, 99, 97, 146, 276, 160, 132, 3, 397, 103, 30, 320, 166, 31, 122, 354, 154, 332, 156, 177, 83, 134, 17, 16, 323, 326, 233, 247, 174, 69, 306, 237, 80, 289, 224, 312, 195, 115, 63, 172, 25, 264, 78, 142, 219, 73, 47, 351, 158, 230, 382, 387, 311, 114, 285, 208, 211, 27, 9, 61, 145, 127, 364, 318, 273, 68, 304, 290, 124, 157, 349, 328, 205, 87, 121, 327, 335, 227, 381, 7, 284, 299, 92, 389, 175, 292, 110, 196, 236, 352, 70, 260, 155, 251, 131, 190, 192, 147, 218, 21, 385, 101, 325, 183, 56, 111, 244, 215, 51, 356, 201, 371, 23, 165, 181, 338, 228, 259, 288, 94, 45, 368, 85, 76, 363, 38, 44, 374, 125, 376, 95, 148, 151, 324, 1, 291, 100, 10, 309, 193, 301, 221, 117, 212, 269, 189, 275, 300, 4, 2]}
-----------------
instance: ../instances/kqbf/kqbf400
construction mechanist: DEFAULT
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 10213, size: 153, elements:[49, 316, 347, 277, 99, 97, 146, 276, 160, 132, 3, 397, 103, 30, 320, 166, 31, 122, 354, 154, 332, 156, 177, 83, 134, 17, 16, 323, 326, 233, 247, 174, 69, 306, 237, 80, 289, 224, 312, 195, 115, 63, 172, 25, 264, 78, 142, 219, 73, 47, 351, 158, 230, 382, 387, 311, 114, 285, 208, 211, 27, 9, 61, 145, 127, 364, 318, 273, 68, 304, 290, 124, 157, 349, 328, 205, 87, 121, 327, 335, 227, 381, 7, 284, 299, 92, 389, 175, 292, 110, 196, 236, 352, 70, 260, 155, 251, 131, 190, 192, 147, 218, 21, 385, 101, 325, 183, 56, 111, 244, 215, 51, 356, 201, 371, 23, 165, 181, 338, 228, 259, 288, 94, 45, 368, 85, 76, 363, 38, 44, 374, 125, 376, 95, 148, 151, 324, 1, 291, 100, 10, 309, 193, 301, 221, 117, 212, 269, 189, 275, 300, 4, 2]}
Knapsack Weight of Best Solution: 1343
RunningTime: 973.293 seconds


=============================
instance: ../instances/kqbf/kqbf400
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 1
	BestSolution: {cost: -22, size: 3, elements:[316, 361, 3]}
> Iteration 12
	BestSolution: {cost: -74, size: 7, elements:[31, 275, 270, 288, 92, 78, 1]}
> Iteration 373
	BestSolution: {cost: -77, size: 8, elements:[262, 364, 149, 326, 155, 320, 99, 3]}
> Iteration 476
	BestSolution: {cost: -100, size: 10, elements:[145, 346, 289, 89, 185, 284, 323, 179, 111, 2]}
-----------------
instance: ../instances/kqbf/kqbf400
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 100, size: 10, elements:[145, 346, 289, 89, 185, 284, 323, 179, 111, 2]}
Knapsack Weight of Best Solution: 102
RunningTime: 6.123 seconds


=============================
instance: ../instances/kqbf/kqbf400
alpha: 0.2
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -9500, size: 138, elements:[99, 316, 49, 97, 114, 347, 154, 16, 160, 31, 155, 51, 42, 335, 69, 134, 247, 224, 174, 21, 211, 251, 332, 128, 70, 327, 279, 127, 179, 145, 290, 352, 7, 172, 117, 306, 80, 177, 125, 196, 206, 387, 331, 208, 328, 72, 56, 376, 289, 230, 384, 264, 323, 195, 34, 307, 181, 381, 9, 397, 185, 54, 250, 103, 219, 194, 108, 92, 235, 349, 390, 383, 113, 367, 101, 175, 140, 240, 66, 293, 167, 18, 216, 45, 361, 228, 354, 30, 25, 333, 124, 1, 234, 265, 156, 233, 17, 158, 274, 336, 288, 147, 357, 157, 299, 273, 73, 244, 83, 32, 324, 291, 53, 312, 10, 171, 148, 110, 197, 153, 363, 166, 163, 200, 65, 159, 227, 338, 285, 304, 389, 205, 47, 189, 348, 209, 301, 260]}
> Iteration 1
	BestSolution: {cost: -9565, size: 143, elements:[119, 49, 316, 313, 31, 382, 6, 67, 277, 122, 84, 108, 373, 342, 87, 206, 7, 117, 230, 330, 166, 380, 247, 12, 52, 336, 15, 70, 301, 318, 201, 120, 10, 152, 327, 77, 177, 80, 363, 153, 233, 359, 125, 1, 231, 148, 168, 386, 333, 354, 222, 289, 106, 229, 196, 155, 379, 307, 328, 19, 270, 100, 245, 171, 44, 66, 225, 14, 246, 300, 339, 53, 140, 393, 312, 306, 16, 397, 30, 156, 258, 138, 99, 323, 299, 159, 288, 124, 240, 244, 332, 154, 173, 48, 265, 17, 273, 175, 56, 157, 348, 378, 163, 93, 18, 209, 65, 162, 127, 352, 211, 11, 147, 375, 200, 219, 97, 174, 364, 103, 387, 291, 374, 28, 239, 95, 376, 134, 158, 181, 195, 262, 371, 101, 366, 83, 264, 236, 194, 121, 20, 253, 234]}
> Iteration 2
	BestSolution: {cost: -9593, size: 143, elements:[278, 97, 362, 389, 272, 311, 151, 121, 51, 384, 104, 15, 248, 154, 273, 99, 265, 122, 174, 65, 2, 148, 296, 348, 216, 140, 85, 10, 152, 57, 227, 295, 318, 17, 9, 228, 230, 62, 332, 323, 317, 115, 30, 241, 263, 158, 386, 64, 245, 166, 342, 25, 309, 67, 357, 112, 71, 167, 108, 147, 234, 240, 124, 18, 354, 132, 381, 371, 368, 326, 385, 236, 377, 208, 92, 304, 170, 383, 289, 74, 22, 378, 1, 43, 190, 233, 196, 299, 237, 244, 16, 48, 49, 125, 291, 328, 4, 143, 100, 288, 366, 155, 173, 307, 253, 336, 281, 159, 157, 53, 195, 274, 393, 168, 286, 220, 95, 110, 373, 101, 184, 387, 11, 93, 83, 239, 63, 88, 82, 126, 136, 329, 58, 327, 287, 359, 369, 223, 38, 24, 226, 177, 269]}
> Iteration 9
	BestSolution: {cost: -9609, size: 141, elements:[17, 14, 252, 332, 180, 143, 150, 353, 76, 331, 125, 11, 235, 6, 279, 123, 19, 227, 399, 169, 307, 120, 272, 246, 114, 260, 278, 247, 245, 373, 224, 286, 196, 119, 382, 0, 342, 67, 166, 328, 85, 357, 134, 111, 24, 277, 30, 241, 298, 201, 336, 327, 53, 99, 312, 153, 355, 69, 148, 240, 28, 162, 376, 163, 375, 199, 206, 98, 293, 16, 318, 359, 369, 316, 299, 124, 70, 1, 183, 25, 354, 159, 211, 41, 239, 395, 387, 103, 288, 301, 84, 34, 155, 158, 265, 154, 18, 289, 77, 365, 236, 381, 208, 187, 300, 100, 97, 253, 165, 398, 368, 38, 174, 122, 95, 383, 393, 296, 371, 291, 52, 366, 190, 372, 243, 49, 274, 290, 179, 177, 218, 267, 345, 349, 157, 94, 225, 360, 323, 264, 397]}
> Iteration 15
	BestSolution: {cost: -9624, size: 144, elements:[264, 83, 167, 145, 116, 54, 68, 284, 112, 382, 324, 7, 131, 104, 70, 72, 156, 208, 51, 155, 295, 139, 328, 21, 136, 325, 138, 85, 25, 316, 306, 339, 187, 174, 161, 191, 94, 157, 80, 87, 108, 133, 320, 358, 211, 114, 307, 323, 258, 172, 0, 196, 3, 230, 309, 82, 289, 247, 154, 278, 195, 99, 366, 69, 17, 367, 304, 16, 277, 221, 132, 299, 251, 312, 240, 266, 56, 100, 81, 119, 296, 125, 342, 373, 327, 223, 233, 177, 171, 1, 383, 371, 134, 30, 259, 62, 332, 73, 246, 357, 349, 160, 158, 147, 290, 220, 364, 183, 63, 166, 273, 97, 227, 103, 272, 18, 110, 215, 301, 31, 391, 236, 352, 92, 170, 311, 329, 317, 65, 395, 49, 368, 275, 378, 387, 11, 179, 88, 276, 165, 218, 389, 260, 269]}
> Iteration 33
	BestSolution: {cost: -9648, size: 145, elements:[17, 69, 362, 237, 260, 184, 293, 151, 84, 229, 382, 316, 6, 87, 57, 92, 199, 276, 377, 353, 38, 273, 395, 233, 44, 383, 284, 269, 155, 53, 171, 145, 31, 140, 327, 398, 231, 215, 70, 375, 138, 177, 80, 136, 7, 10, 253, 157, 307, 195, 47, 201, 312, 323, 110, 147, 342, 51, 158, 30, 258, 245, 306, 160, 159, 156, 73, 83, 296, 265, 272, 125, 227, 304, 206, 332, 250, 196, 348, 301, 93, 28, 288, 386, 77, 277, 148, 11, 119, 378, 66, 373, 95, 88, 220, 287, 317, 286, 366, 15, 100, 133, 179, 285, 357, 387, 336, 153, 85, 107, 134, 338, 328, 303, 236, 263, 82, 162, 102, 5, 166, 230, 23, 359, 165, 318, 193, 360, 183, 101, 76, 154, 131, 208, 16, 365, 9, 190, 299, 97, 389, 234, 120, 397, 49]}
> Iteration 34
	BestSolution: {cost: -9868, size: 142, elements:[260, 210, 254, 262, 114, 163, 289, 312, 286, 182, 5, 224, 357, 251, 69, 17, 22, 211, 56, 53, 331, 360, 165, 16, 77, 34, 90, 266, 299, 232, 159, 244, 371, 236, 66, 162, 208, 328, 238, 285, 158, 24, 279, 377, 277, 150, 253, 385, 304, 383, 195, 157, 73, 387, 83, 288, 154, 378, 88, 11, 85, 364, 155, 183, 131, 80, 72, 375, 125, 368, 119, 373, 84, 111, 51, 386, 229, 339, 240, 352, 171, 147, 366, 23, 49, 263, 101, 35, 303, 134, 196, 166, 272, 67, 48, 100, 287, 342, 168, 82, 246, 4, 6, 63, 278, 148, 332, 307, 14, 28, 245, 201, 327, 151, 309, 172, 110, 190, 359, 230, 259, 97, 247, 323, 95, 70, 179, 399, 384, 376, 121, 94, 394, 193, 293, 1, 393, 76, 174, 264, 317, 397]}
> Iteration 56
	BestSolution: {cost: -10204, size: 151, elements:[120, 251, 362, 279, 260, 6, 21, 128, 114, 228, 332, 14, 347, 17, 227, 88, 272, 22, 371, 266, 229, 163, 184, 56, 125, 373, 51, 320, 177, 377, 74, 182, 150, 286, 224, 348, 196, 43, 311, 166, 237, 273, 357, 274, 195, 147, 208, 289, 126, 5, 252, 388, 244, 253, 378, 328, 144, 154, 11, 158, 76, 92, 331, 383, 146, 85, 136, 236, 368, 1, 389, 38, 354, 384, 143, 4, 108, 49, 175, 121, 2, 83, 96, 245, 192, 103, 216, 211, 291, 101, 124, 215, 290, 352, 10, 288, 387, 265, 30, 16, 323, 299, 395, 324, 89, 110, 309, 325, 306, 312, 375, 349, 165, 80, 70, 307, 131, 218, 183, 99, 155, 327, 157, 366, 304, 132, 93, 250, 97, 58, 25, 63, 148, 285, 65, 174, 19, 336, 172, 232, 72, 8, 94, 77, 233, 32, 363, 317, 276, 199, 397]}
-----------------
instance: ../instances/kqbf/kqbf400
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 10204, size: 151, elements:[120, 251, 362, 279, 260, 6, 21, 128, 114, 228, 332, 14, 347, 17, 227, 88, 272, 22, 371, 266, 229, 163, 184, 56, 125, 373, 51, 320, 177, 377, 74, 182, 150, 286, 224, 348, 196, 43, 311, 166, 237, 273, 357, 274, 195, 147, 208, 289, 126, 5, 252, 388, 244, 253, 378, 328, 144, 154, 11, 158, 76, 92, 331, 383, 146, 85, 136, 236, 368, 1, 389, 38, 354, 384, 143, 4, 108, 49, 175, 121, 2, 83, 96, 245, 192, 103, 216, 211, 291, 101, 124, 215, 290, 352, 10, 288, 387, 265, 30, 16, 323, 299, 395, 324, 89, 110, 309, 325, 306, 312, 375, 349, 165, 80, 70, 307, 131, 218, 183, 99, 155, 327, 157, 366, 304, 132, 93, 250, 97, 58, 25, 63, 148, 285, 65, 174, 19, 336, 172, 232, 72, 8, 94, 77, 233, 32, 363, 317, 276, 199, 397]}
Knapsack Weight of Best Solution: 1343
RunningTime: 1816.03 seconds


=============================
instance: ../instances/kqbf/kqbf400
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 6
	BestSolution: {cost: -9, size: 2, elements:[249, 4]}
-----------------
instance: ../instances/kqbf/kqbf400
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 9, size: 2, elements:[249, 4]}
Knapsack Weight of Best Solution: 19
RunningTime: 3.901 seconds


=============================
instance: ../instances/kqbf/kqbf400
alpha: 0.2
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -8570, size: 131, elements:[4, 6, 117, 383, 171, 19, 145, 155, 31, 21, 284, 316, 333, 119, 353, 187, 53, 99, 358, 312, 375, 69, 162, 67, 159, 199, 398, 17, 61, 354, 114, 30, 105, 266, 342, 327, 93, 52, 382, 239, 1, 160, 247, 47, 231, 195, 346, 211, 299, 197, 395, 98, 169, 339, 300, 381, 124, 77, 397, 16, 369, 41, 28, 245, 153, 167, 399, 293, 166, 25, 307, 190, 123, 38, 100, 289, 368, 125, 328, 96, 355, 224, 366, 373, 277, 3, 57, 163, 359, 136, 227, 374, 376, 111, 318, 181, 246, 158, 44, 80, 258, 372, 301, 70, 156, 192, 42, 294, 131, 332, 18, 54, 264, 103, 240, 14, 252, 235, 323, 208, 236, 143, 177, 104, 263, 196, 218, 234, 138, 269, 278]}
> Iteration 1
	BestSolution: {cost: -9354, size: 139, elements:[202, 286, 335, 197, 227, 324, 143, 180, 10, 279, 120, 307, 123, 25, 299, 336, 328, 327, 274, 77, 206, 47, 200, 283, 7, 245, 382, 153, 159, 40, 247, 52, 158, 270, 104, 246, 355, 140, 293, 239, 296, 376, 338, 288, 57, 177, 277, 160, 125, 16, 224, 30, 354, 114, 366, 118, 367, 75, 265, 220, 51, 373, 54, 18, 111, 181, 278, 298, 289, 390, 385, 393, 389, 347, 226, 381, 235, 155, 130, 124, 85, 295, 17, 134, 167, 68, 44, 284, 100, 211, 399, 272, 129, 103, 1, 48, 50, 154, 271, 131, 326, 20, 369, 194, 148, 166, 99, 332, 70, 323, 241, 386, 9, 350, 136, 156, 231, 139, 300, 94, 223, 113, 317, 290, 98, 169, 216, 342, 15, 291, 65, 83, 215, 92, 316, 218, 119, 138, 234]}
-----------------
instance: ../instances/kqbf/kqbf400
construction mechanist: SAMPLED_GREEDY
alpha: 0.2
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 9354, size: 139, elements:[202, 286, 335, 197, 227, 324, 143, 180, 10, 279, 120, 307, 123, 25, 299, 336, 328, 327, 274, 77, 206, 47, 200, 283, 7, 245, 382, 153, 159, 40, 247, 52, 158, 270, 104, 246, 355, 140, 293, 239, 296, 376, 338, 288, 57, 177, 277, 160, 125, 16, 224, 30, 354, 114, 366, 118, 367, 75, 265, 220, 51, 373, 54, 18, 111, 181, 278, 298, 289, 390, 385, 393, 389, 347, 226, 381, 235, 155, 130, 124, 85, 295, 17, 134, 167, 68, 44, 284, 100, 211, 399, 272, 129, 103, 1, 48, 50, 154, 271, 131, 326, 20, 369, 194, 148, 166, 99, 332, 70, 323, 241, 386, 9, 350, 136, 156, 231, 139, 300, 94, 223, 113, 317, 290, 98, 169, 216, 342, 15, 291, 65, 83, 215, 92, 316, 218, 119, 138, 234]}
Knapsack Weight of Best Solution: 1343
RunningTime: 1817.672 seconds


=============================
instance: ../instances/kqbf/kqbf400
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: true
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -183, size: 15, elements:[382, 284, 104, 157, 364, 334, 295, 16, 216, 159, 15, 108, 290, 272, 0]}
> Iteration 3
	BestSolution: {cost: -405, size: 30, elements:[278, 299, 284, 63, 291, 375, 195, 160, 301, 52, 376, 111, 219, 240, 31, 147, 70, 102, 5, 69, 75, 252, 194, 191, 114, 117, 145, 37, 310, 1]}
> Iteration 4
	BestSolution: {cost: -2014, size: 76, elements:[211, 50, 338, 315, 201, 340, 146, 134, 91, 139, 83, 17, 179, 254, 352, 330, 317, 200, 194, 319, 81, 177, 380, 341, 288, 239, 244, 289, 346, 383, 190, 260, 12, 48, 292, 136, 86, 66, 366, 371, 173, 80, 238, 1, 63, 373, 263, 61, 41, 357, 219, 385, 304, 37, 320, 9, 397, 43, 298, 192, 347, 65, 291, 285, 299, 307, 156, 360, 157, 2, 323, 110, 113, 176, 354, 0]}
> Iteration 57
	BestSolution: {cost: -2953, size: 89, elements:[151, 161, 324, 82, 143, 170, 131, 257, 317, 362, 371, 150, 296, 20, 311, 85, 77, 164, 295, 44, 26, 227, 111, 32, 368, 121, 275, 208, 253, 7, 327, 40, 314, 179, 299, 135, 396, 366, 389, 369, 18, 177, 165, 126, 99, 88, 279, 309, 97, 274, 174, 270, 118, 190, 122, 348, 49, 215, 300, 84, 259, 171, 226, 113, 239, 251, 147, 166, 183, 70, 320, 5, 287, 127, 194, 157, 228, 246, 223, 290, 241, 271, 205, 94, 326, 238, 336, 212, 0]}
> Iteration 149
	BestSolution: {cost: -3076, size: 89, elements:[172, 19, 46, 74, 310, 378, 309, 88, 61, 132, 240, 62, 229, 241, 389, 120, 306, 22, 359, 72, 154, 367, 370, 368, 383, 253, 276, 317, 360, 136, 85, 263, 303, 210, 357, 319, 178, 152, 18, 17, 53, 115, 326, 126, 119, 15, 312, 255, 24, 100, 341, 196, 285, 325, 26, 291, 381, 4, 69, 140, 86, 30, 248, 157, 238, 70, 125, 262, 109, 219, 103, 8, 259, 242, 25, 141, 342, 123, 387, 138, 289, 225, 67, 226, 284, 168, 273, 113, 0]}
> Iteration 183
	BestSolution: {cost: -5914, size: 139, elements:[335, 325, 279, 331, 379, 125, 42, 360, 348, 235, 153, 384, 244, 28, 31, 196, 14, 229, 177, 268, 180, 144, 263, 141, 146, 245, 121, 236, 111, 361, 78, 336, 23, 168, 159, 49, 393, 114, 382, 57, 339, 370, 352, 293, 154, 294, 378, 185, 143, 61, 94, 347, 350, 50, 69, 367, 284, 222, 385, 328, 150, 303, 166, 362, 174, 366, 155, 8, 164, 188, 206, 108, 165, 100, 24, 213, 169, 253, 278, 290, 270, 291, 179, 9, 251, 173, 359, 380, 260, 368, 312, 313, 330, 1, 119, 41, 340, 16, 221, 277, 392, 80, 67, 300, 29, 25, 318, 162, 267, 305, 59, 374, 128, 62, 101, 72, 304, 239, 228, 82, 259, 90, 377, 190, 246, 172, 75, 354, 358, 5, 219, 139, 19, 30, 234, 218, 17, 397, 269]}
> Iteration 210
	BestSolution: {cost: -6314, size: 143, elements:[382, 386, 160, 82, 159, 66, 252, 385, 76, 229, 121, 393, 1, 297, 361, 58, 300, 270, 398, 236, 148, 33, 399, 328, 36, 216, 113, 245, 259, 169, 281, 274, 10, 192, 163, 170, 24, 168, 134, 312, 61, 237, 17, 28, 167, 263, 87, 332, 278, 136, 220, 144, 22, 260, 166, 352, 341, 125, 324, 335, 269, 162, 2, 98, 80, 182, 317, 250, 299, 217, 154, 243, 48, 158, 307, 284, 248, 348, 86, 327, 231, 381, 7, 145, 378, 69, 239, 397, 101, 78, 20, 288, 190, 294, 88, 57, 4, 21, 6, 108, 323, 38, 114, 84, 283, 100, 128, 97, 63, 215, 107, 199, 357, 292, 273, 119, 81, 360, 157, 83, 96, 390, 296, 23, 102, 31, 62, 342, 77, 174, 47, 362, 92, 287, 29, 246, 247, 124, 16, 138, 49, 155, 120]}
> Iteration 369
	BestSolution: {cost: -6356, size: 136, elements:[240, 180, 174, 248, 332, 54, 205, 211, 196, 374, 219, 168, 24, 97, 244, 324, 162, 288, 389, 315, 101, 366, 246, 386, 25, 112, 292, 384, 125, 135, 355, 111, 123, 194, 106, 213, 173, 239, 185, 49, 152, 224, 7, 204, 278, 76, 371, 318, 257, 234, 95, 325, 150, 71, 0, 85, 80, 221, 83, 92, 273, 320, 147, 52, 176, 21, 44, 251, 118, 357, 131, 148, 151, 4, 354, 11, 143, 157, 56, 81, 295, 327, 84, 10, 154, 232, 166, 132, 189, 40, 307, 341, 272, 299, 30, 108, 367, 14, 15, 63, 304, 98, 209, 72, 104, 32, 363, 17, 184, 230, 342, 100, 218, 57, 235, 28, 350, 48, 37, 290, 58, 67, 20, 328, 364, 38, 34, 387, 208, 263, 291, 171, 362, 339, 317, 155]}
> Iteration 533
	BestSolution: {cost: -7102, size: 144, elements:[276, 211, 218, 6, 70, 366, 349, 117, 247, 72, 89, 284, 224, 252, 32, 169, 50, 347, 239, 321, 103, 377, 189, 183, 99, 61, 238, 337, 290, 51, 368, 208, 166, 25, 92, 132, 396, 363, 110, 326, 357, 346, 83, 291, 79, 78, 157, 196, 354, 145, 91, 176, 58, 293, 352, 141, 80, 98, 351, 367, 121, 215, 299, 329, 69, 397, 53, 307, 236, 336, 277, 328, 255, 123, 94, 18, 316, 4, 175, 312, 114, 237, 49, 274, 100, 311, 5, 174, 304, 30, 111, 54, 124, 129, 16, 232, 24, 227, 250, 142, 246, 289, 260, 264, 125, 113, 332, 3, 279, 398, 381, 324, 139, 137, 8, 181, 21, 28, 216, 56, 221, 17, 384, 41, 161, 318, 23, 172, 154, 259, 219, 68, 156, 230, 62, 213, 195, 73, 266, 323, 212, 155, 269, 278]}
-----------------
instance: ../instances/kqbf/kqbf400
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 7102, size: 144, elements:[276, 211, 218, 6, 70, 366, 349, 117, 247, 72, 89, 284, 224, 252, 32, 169, 50, 347, 239, 321, 103, 377, 189, 183, 99, 61, 238, 337, 290, 51, 368, 208, 166, 25, 92, 132, 396, 363, 110, 326, 357, 346, 83, 291, 79, 78, 157, 196, 354, 145, 91, 176, 58, 293, 352, 141, 80, 98, 351, 367, 121, 215, 299, 329, 69, 397, 53, 307, 236, 336, 277, 328, 255, 123, 94, 18, 316, 4, 175, 312, 114, 237, 49, 274, 100, 311, 5, 174, 304, 30, 111, 54, 124, 129, 16, 232, 24, 227, 250, 142, 246, 289, 260, 264, 125, 113, 332, 3, 279, 398, 381, 324, 139, 137, 8, 181, 21, 28, 216, 56, 221, 17, 384, 41, 161, 318, 23, 172, 154, 259, 219, 68, 156, 230, 62, 213, 195, 73, 266, 323, 212, 155, 269, 278]}
Knapsack Weight of Best Solution: 1343
RunningTime: 77.348 seconds


=============================
instance: ../instances/kqbf/kqbf400
alpha: 0.5
construction mechanist: DEFAULT
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -9555, size: 143, elements:[58, 389, 140, 393, 31, 326, 35, 30, 270, 49, 68, 229, 121, 19, 154, 246, 247, 335, 10, 7, 110, 391, 367, 238, 16, 132, 279, 155, 307, 72, 230, 220, 338, 357, 352, 361, 144, 284, 157, 196, 329, 312, 251, 177, 56, 306, 208, 175, 328, 70, 289, 18, 172, 200, 297, 327, 104, 296, 347, 92, 290, 108, 53, 371, 76, 137, 319, 78, 51, 125, 288, 368, 354, 236, 349, 274, 25, 123, 158, 148, 387, 107, 381, 239, 325, 363, 366, 5, 129, 311, 124, 85, 228, 170, 227, 27, 250, 265, 211, 126, 1, 83, 65, 324, 216, 21, 50, 103, 54, 174, 32, 215, 100, 332, 291, 131, 63, 257, 101, 224, 4, 336, 179, 15, 192, 245, 260, 365, 218, 183, 82, 84, 147, 141, 272, 166, 323, 17, 69, 9, 317, 264, 120]}
> Iteration 1
	BestSolution: {cost: -9934, size: 142, elements:[377, 35, 101, 165, 84, 270, 304, 397, 262, 254, 260, 211, 183, 1, 69, 230, 134, 243, 3, 196, 285, 387, 174, 364, 49, 9, 386, 373, 289, 349, 50, 320, 247, 245, 80, 391, 110, 201, 179, 214, 327, 290, 277, 70, 296, 97, 151, 301, 28, 293, 95, 342, 232, 267, 236, 328, 366, 263, 193, 359, 66, 155, 244, 371, 53, 162, 355, 399, 157, 286, 150, 23, 312, 94, 111, 17, 251, 187, 119, 99, 356, 166, 158, 339, 195, 292, 398, 54, 394, 208, 16, 331, 352, 218, 131, 300, 86, 307, 122, 246, 240, 14, 376, 332, 393, 238, 226, 154, 18, 125, 380, 168, 15, 20, 288, 24, 67, 11, 48, 385, 148, 124, 100, 159, 253, 235, 323, 10, 121, 340, 294, 76, 192, 224, 372, 177, 96, 368, 354, 335, 269, 278]}
> Iteration 23
	BestSolution: {cost: -10033, size: 149, elements:[49, 288, 271, 373, 189, 354, 389, 154, 31, 92, 230, 117, 56, 289, 184, 125, 304, 368, 247, 275, 87, 2, 27, 201, 376, 211, 79, 374, 148, 302, 296, 97, 96, 84, 100, 78, 316, 69, 134, 17, 198, 195, 235, 192, 273, 284, 155, 383, 175, 157, 249, 7, 196, 328, 72, 85, 83, 65, 264, 226, 0, 143, 261, 225, 298, 1, 94, 283, 236, 190, 166, 327, 209, 320, 103, 290, 113, 6, 215, 216, 170, 38, 239, 291, 219, 332, 99, 139, 51, 62, 177, 233, 349, 364, 174, 324, 390, 63, 397, 307, 32, 30, 323, 167, 299, 274, 82, 183, 101, 245, 173, 300, 240, 159, 317, 272, 223, 70, 301, 10, 329, 342, 47, 67, 28, 199, 259, 250, 24, 145, 108, 309, 93, 312, 25, 265, 16, 228, 21, 147, 110, 208, 336, 88, 352, 260, 269, 119, 234]}
> Iteration 36
	BestSolution: {cost: -10197, size: 147, elements:[17, 97, 49, 349, 249, 125, 171, 4, 82, 272, 229, 184, 383, 51, 30, 362, 69, 251, 31, 154, 157, 230, 56, 364, 72, 195, 196, 266, 103, 306, 16, 296, 147, 110, 83, 323, 215, 312, 265, 165, 375, 80, 357, 332, 273, 304, 389, 227, 290, 88, 38, 208, 7, 63, 166, 190, 216, 228, 93, 6, 348, 5, 101, 92, 347, 158, 148, 134, 303, 163, 189, 274, 47, 371, 177, 338, 352, 288, 368, 175, 250, 21, 260, 76, 114, 73, 285, 328, 23, 137, 132, 155, 236, 354, 244, 199, 286, 259, 28, 162, 53, 151, 159, 79, 77, 289, 299, 201, 327, 209, 211, 124, 145, 183, 99, 224, 291, 182, 121, 331, 85, 247, 160, 277, 172, 387, 301, 11, 325, 311, 219, 25, 78, 107, 264, 284, 131, 156, 218, 245, 377, 309, 320, 324, 2, 397, 317]}
-----------------
instance: ../instances/kqbf/kqbf400
construction mechanist: DEFAULT
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 10197, size: 147, elements:[17, 97, 49, 349, 249, 125, 171, 4, 82, 272, 229, 184, 383, 51, 30, 362, 69, 251, 31, 154, 157, 230, 56, 364, 72, 195, 196, 266, 103, 306, 16, 296, 147, 110, 83, 323, 215, 312, 265, 165, 375, 80, 357, 332, 273, 304, 389, 227, 290, 88, 38, 208, 7, 63, 166, 190, 216, 228, 93, 6, 348, 5, 101, 92, 347, 158, 148, 134, 303, 163, 189, 274, 47, 371, 177, 338, 352, 288, 368, 175, 250, 21, 260, 76, 114, 73, 285, 328, 23, 137, 132, 155, 236, 354, 244, 199, 286, 259, 28, 162, 53, 151, 159, 79, 77, 289, 299, 201, 327, 209, 211, 124, 145, 183, 99, 224, 291, 182, 121, 331, 85, 247, 160, 277, 172, 387, 301, 11, 325, 311, 219, 25, 78, 107, 264, 284, 131, 156, 218, 245, 377, 309, 320, 324, 2, 397, 317]}
Knapsack Weight of Best Solution: 1343
RunningTime: 1816.949 seconds


=============================
instance: ../instances/kqbf/kqbf400
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 1
	BestSolution: {cost: -2, size: 3, elements:[168, 65, 1]}
> Iteration 5
	BestSolution: {cost: -19, size: 3, elements:[171, 75, 4]}
> Iteration 31
	BestSolution: {cost: -29, size: 8, elements:[211, 70, 172, 148, 25, 383, 372, 1]}
> Iteration 53
	BestSolution: {cost: -42, size: 6, elements:[104, 0, 287, 355, 115, 1]}
> Iteration 64
	BestSolution: {cost: -55, size: 8, elements:[184, 377, 305, 288, 182, 233, 161, 0]}
> Iteration 84
	BestSolution: {cost: -127, size: 11, elements:[324, 312, 4, 69, 328, 19, 231, 160, 277, 339, 1]}
> Iteration 719
	BestSolution: {cost: -168, size: 14, elements:[52, 80, 208, 49, 238, 385, 292, 108, 343, 326, 178, 217, 175, 3]}
-----------------
instance: ../instances/kqbf/kqbf400
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 168, size: 14, elements:[52, 80, 208, 49, 238, 385, 292, 108, 343, 326, 178, 217, 175, 3]}
Knapsack Weight of Best Solution: 144
RunningTime: 6.273 seconds


=============================
instance: ../instances/kqbf/kqbf400
alpha: 0.5
construction mechanist: RANDOM_PLUS_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -8695, size: 137, elements:[303, 66, 328, 9, 171, 35, 140, 155, 23, 72, 156, 5, 187, 208, 366, 295, 148, 74, 348, 189, 335, 116, 244, 234, 223, 309, 289, 154, 101, 320, 326, 131, 86, 18, 164, 107, 380, 193, 94, 358, 188, 75, 351, 263, 370, 19, 386, 111, 361, 46, 129, 50, 54, 108, 141, 217, 261, 137, 132, 306, 70, 221, 44, 222, 347, 237, 213, 16, 318, 49, 165, 99, 80, 15, 339, 230, 51, 385, 4, 166, 383, 285, 350, 30, 292, 277, 157, 73, 177, 377, 151, 371, 276, 387, 378, 325, 368, 146, 232, 324, 312, 250, 62, 90, 158, 147, 114, 352, 76, 127, 251, 286, 265, 218, 211, 11, 248, 10, 258, 327, 304, 336, 110, 95, 45, 215, 310, 269, 288, 17, 212, 20, 323, 260, 317, 119, 120]}
> Iteration 1
	BestSolution: {cost: -9910, size: 146, elements:[260, 233, 184, 230, 82, 382, 168, 116, 307, 32, 205, 157, 94, 297, 144, 335, 179, 39, 141, 193, 292, 17, 113, 66, 273, 397, 9, 195, 99, 142, 53, 121, 151, 331, 92, 349, 247, 70, 183, 69, 7, 80, 327, 289, 323, 172, 110, 22, 56, 177, 306, 208, 196, 304, 23, 244, 215, 290, 185, 351, 126, 312, 352, 81, 214, 124, 232, 174, 251, 49, 16, 165, 371, 381, 97, 359, 332, 356, 236, 34, 95, 366, 63, 321, 387, 227, 354, 211, 114, 325, 91, 288, 293, 28, 376, 384, 255, 228, 390, 105, 111, 264, 3, 398, 145, 263, 54, 277, 158, 83, 386, 210, 224, 347, 328, 324, 181, 340, 285, 146, 166, 85, 368, 249, 254, 299, 30, 25, 134, 5, 76, 154, 125, 399, 377, 155, 329, 51, 147, 383, 240, 342, 276, 119, 317, 212]}
> Iteration 7
	BestSolution: {cost: -9994, size: 146, elements:[35, 255, 386, 373, 360, 243, 136, 378, 377, 5, 229, 159, 77, 206, 285, 305, 276, 327, 328, 389, 120, 60, 125, 177, 231, 20, 108, 317, 15, 96, 263, 296, 158, 325, 258, 370, 222, 265, 211, 316, 156, 336, 18, 380, 348, 148, 10, 301, 306, 70, 92, 273, 304, 47, 366, 129, 80, 230, 3, 277, 28, 23, 208, 215, 110, 24, 387, 201, 191, 196, 251, 363, 83, 49, 318, 187, 319, 75, 16, 95, 200, 339, 352, 361, 398, 17, 157, 375, 103, 172, 63, 288, 259, 368, 11, 119, 332, 165, 91, 356, 236, 166, 183, 290, 94, 312, 354, 247, 111, 323, 66, 121, 67, 342, 30, 69, 397, 145, 134, 195, 364, 124, 155, 85, 299, 99, 154, 56, 289, 7, 58, 48, 1, 244, 100, 240, 114, 307, 253, 76, 269, 82, 274, 182, 81, 278]}
> Iteration 52
	BestSolution: {cost: -10061, size: 146, elements:[260, 324, 35, 232, 373, 66, 293, 254, 235, 279, 226, 246, 14, 84, 120, 211, 155, 108, 327, 390, 289, 18, 54, 92, 70, 307, 193, 141, 285, 114, 297, 56, 352, 376, 113, 101, 335, 94, 157, 240, 99, 326, 76, 208, 177, 377, 329, 371, 11, 328, 276, 385, 269, 212, 121, 110, 147, 378, 244, 236, 368, 85, 342, 95, 383, 51, 196, 253, 151, 158, 23, 166, 67, 309, 172, 380, 15, 273, 148, 323, 332, 100, 125, 216, 154, 288, 10, 248, 393, 16, 366, 245, 174, 271, 97, 304, 359, 386, 183, 165, 49, 247, 278, 296, 230, 339, 75, 62, 9, 318, 69, 306, 397, 17, 146, 1, 317, 182, 384, 122, 44, 312, 286, 192, 360, 277, 354, 331, 168, 263, 80, 119, 82, 272, 134, 53, 136, 28, 195, 83, 138, 316, 24, 259, 301, 234]}
> Iteration 56
	BestSolution: {cost: -10072, size: 150, elements:[49, 281, 145, 143, 108, 80, 155, 66, 290, 263, 327, 236, 385, 166, 95, 162, 54, 23, 208, 328, 147, 303, 88, 7, 9, 45, 73, 323, 83, 285, 158, 85, 160, 4, 51, 114, 193, 347, 141, 269, 215, 87, 101, 121, 110, 329, 94, 174, 70, 192, 131, 76, 220, 284, 127, 250, 306, 154, 69, 237, 19, 125, 342, 335, 196, 286, 384, 157, 312, 16, 253, 38, 273, 195, 179, 398, 244, 251, 17, 289, 320, 177, 378, 377, 304, 375, 218, 363, 260, 338, 309, 175, 383, 6, 11, 387, 10, 349, 214, 331, 151, 216, 92, 381, 128, 144, 348, 150, 316, 307, 230, 84, 31, 336, 352, 350, 358, 265, 99, 53, 386, 288, 56, 397, 44, 122, 165, 77, 366, 117, 171, 380, 370, 211, 153, 18, 223, 107, 248, 172, 276, 210, 119, 197, 212, 368, 356, 332, 319, 351]}
-----------------
instance: ../instances/kqbf/kqbf400
construction mechanist: RANDOM_PLUS_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 10072, size: 150, elements:[49, 281, 145, 143, 108, 80, 155, 66, 290, 263, 327, 236, 385, 166, 95, 162, 54, 23, 208, 328, 147, 303, 88, 7, 9, 45, 73, 323, 83, 285, 158, 85, 160, 4, 51, 114, 193, 347, 141, 269, 215, 87, 101, 121, 110, 329, 94, 174, 70, 192, 131, 76, 220, 284, 127, 250, 306, 154, 69, 237, 19, 125, 342, 335, 196, 286, 384, 157, 312, 16, 253, 38, 273, 195, 179, 398, 244, 251, 17, 289, 320, 177, 378, 377, 304, 375, 218, 363, 260, 338, 309, 175, 383, 6, 11, 387, 10, 349, 214, 331, 151, 216, 92, 381, 128, 144, 348, 150, 316, 307, 230, 84, 31, 336, 352, 350, 358, 265, 99, 53, 386, 288, 56, 397, 44, 122, 165, 77, 366, 117, 171, 380, 370, 211, 153, 18, 223, 107, 248, 172, 276, 210, 119, 197, 212, 368, 356, 332, 319, 351]}
Knapsack Weight of Best Solution: 1343
RunningTime: 1801.258 seconds


=============================
instance: ../instances/kqbf/kqbf400
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: true
iterations: 1000
-----------------
> Iteration 3
	BestSolution: {cost: -9, size: 2, elements:[249, 4]}
-----------------
instance: ../instances/kqbf/kqbf400
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: true
iterations: 1000
Best Solution Found: {cost: 9, size: 2, elements:[249, 4]}
Knapsack Weight of Best Solution: 19
RunningTime: 3.949 seconds


=============================
instance: ../instances/kqbf/kqbf400
alpha: 0.5
construction mechanist: SAMPLED_GREEDY
firstImproving: false
iterations: 1000
-----------------
> Iteration 0
	BestSolution: {cost: -9245, size: 139, elements:[90, 254, 19, 260, 331, 171, 53, 312, 353, 69, 17, 61, 351, 67, 119, 6, 201, 284, 94, 151, 155, 374, 316, 358, 159, 190, 162, 87, 84, 28, 250, 111, 34, 303, 100, 0, 328, 300, 114, 85, 161, 7, 157, 56, 196, 397, 230, 289, 307, 99, 166, 174, 49, 290, 80, 247, 368, 165, 16, 189, 288, 122, 31, 398, 339, 352, 21, 11, 208, 195, 124, 244, 152, 48, 163, 356, 154, 333, 354, 168, 185, 281, 273, 341, 125, 236, 76, 1, 381, 399, 148, 245, 323, 342, 359, 332, 97, 211, 235, 158, 327, 304, 95, 70, 192, 179, 143, 301, 160, 193, 366, 223, 227, 376, 246, 380, 325, 349, 52, 232, 271, 63, 172, 364, 183, 394, 54, 4, 44, 336, 117, 110, 373, 383, 226, 50, 147, 264, 269]}
> Iteration 2
	BestSolution: {cost: -9354, size: 139, elements:[202, 286, 335, 197, 227, 324, 143, 180, 10, 279, 120, 307, 123, 25, 299, 336, 328, 327, 274, 77, 206, 47, 200, 283, 7, 245, 382, 153, 159, 40, 247, 52, 158, 270, 104, 246, 355, 140, 293, 239, 296, 376, 338, 288, 57, 177, 277, 160, 125, 16, 224, 30, 354, 114, 366, 118, 367, 75, 265, 220, 51, 373, 54, 18, 111, 181, 278, 298, 289, 390, 385, 393, 389, 347, 226, 381, 235, 155, 130, 124, 85, 295, 17, 134, 167, 68, 44, 284, 100, 211, 399, 272, 129, 103, 1, 48, 50, 154, 271, 131, 326, 20, 369, 194, 148, 166, 99, 332, 70, 323, 241, 386, 9, 350, 136, 156, 231, 139, 300, 94, 223, 113, 317, 290, 98, 169, 216, 342, 15, 291, 65, 83, 215, 92, 316, 218, 119, 138, 234]}
-----------------
instance: ../instances/kqbf/kqbf400
construction mechanist: SAMPLED_GREEDY
alpha: 0.5
firstImproving: false
iterations: 1000
Best Solution Found: {cost: 9354, size: 139, elements:[202, 286, 335, 197, 227, 324, 143, 180, 10, 279, 120, 307, 123, 25, 299, 336, 328, 327, 274, 77, 206, 47, 200, 283, 7, 245, 382, 153, 159, 40, 247, 52, 158, 270, 104, 246, 355, 140, 293, 239, 296, 376, 338, 288, 57, 177, 277, 160, 125, 16, 224, 30, 354, 114, 366, 118, 367, 75, 265, 220, 51, 373, 54, 18, 111, 181, 278, 298, 289, 390, 385, 393, 389, 347, 226, 381, 235, 155, 130, 124, 85, 295, 17, 134, 167, 68, 44, 284, 100, 211, 399, 272, 129, 103, 1, 48, 50, 154, 271, 131, 326, 20, 369, 194, 148, 166, 99, 332, 70, 323, 241, 386, 9, 350, 136, 156, 231, 139, 300, 94, 223, 113, 317, 290, 98, 169, 216, 342, 15, 291, 65, 83, 215, 92, 316, 218, 119, 138, 234]}
Knapsack Weight of Best Solution: 1343
RunningTime: 1812.05 seconds

BUILD SUCCESSFUL in 5h 7m 45s
4 actionable tasks: 3 executed, 1 up-to-date
